{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "LOG_NEW_POOL",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "LOG_NEW_SWAAPLABS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "LOG_TRANSFER_REQUESTED",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "newPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "b",
          "type": "address"
        }
      ],
      "name": "isPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwaapLabs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        }
      ],
      "name": "collect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resumeProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whenNotPaused",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "revokePoolFactoryControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        }
      ],
      "name": "setPoolSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "dynamicCoverageFeesZ",
          "type": "uint64"
        }
      ],
      "name": "setPoolDynamicCoverageFeesZ",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "dynamicCoverageFeesHorizon",
          "type": "uint256"
        }
      ],
      "name": "setPoolDynamicCoverageFeesHorizon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "priceStatisticsLookbackInRound",
          "type": "uint8"
        }
      ],
      "name": "setPoolPriceStatisticsLookbackInRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "priceStatisticsLookbackInSec",
          "type": "uint64"
        }
      ],
      "name": "setPoolPriceStatisticsLookbackInSec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "priceStatisticsLookbackStepInRound",
          "type": "uint8"
        }
      ],
      "name": "setPoolPriceStatisticsLookbackStepInRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxPriceUnpegRatio",
          "type": "uint256"
        }
      ],
      "name": "setPoolMaxPriceUnpegRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"LOG_NEW_POOL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"LOG_NEW_SWAAPLABS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"LOG_TRANSFER_REQUESTED\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwaapLabs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"}],\"name\":\"isPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"revokePoolFactoryControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dynamicCoverageFeesHorizon\",\"type\":\"uint256\"}],\"name\":\"setPoolDynamicCoverageFeesHorizon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"dynamicCoverageFeesZ\",\"type\":\"uint64\"}],\"name\":\"setPoolDynamicCoverageFeesZ\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxPriceUnpegRatio\",\"type\":\"uint256\"}],\"name\":\"setPoolMaxPriceUnpegRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"priceStatisticsLookbackInRound\",\"type\":\"uint8\"}],\"name\":\"setPoolPriceStatisticsLookbackInRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"priceStatisticsLookbackInSec\",\"type\":\"uint64\"}],\"name\":\"setPoolPriceStatisticsLookbackInSec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"priceStatisticsLookbackStepInRound\",\"type\":\"uint8\"}],\"name\":\"setPoolPriceStatisticsLookbackStepInRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"setPoolSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whenNotPaused\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pauseProtocol()\":{\"details\":\"Pause disables most of the pools functionalities (swap, joinPool & joinswap) and only allows LPs to withdraw their funds\"},\"resumeProtocol()\":{\"details\":\"Unpausing re-enables all the pools functionalities\"},\"whenNotPaused()\":{\"details\":\"This function is called by the pools whenever a swap or a joinPool is being made\"}},\"version\":1},\"userdoc\":{\"events\":{\"LOG_NEW_POOL(address,address)\":{\"notice\":\"Emitted when a controller creates a pool\"},\"LOG_NEW_SWAAPLABS(address,address)\":{\"notice\":\"Emitted when a new address accepts the Swaap labs role\"},\"LOG_TRANSFER_REQUESTED(address,address)\":{\"notice\":\"Emitted when a Swaap labs transfer is requested\"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"collect(address)\":{\"notice\":\"Sends the exit fees accumulated to swaap labs\"},\"getSwaapLabs()\":{\"notice\":\"Returns swaap labs' address\"},\"isPool(address)\":{\"notice\":\"Returns if an address corresponds to a pool created by the factory\"},\"newPool()\":{\"notice\":\"Create new pool with default parameters\"},\"pauseProtocol()\":{\"notice\":\"Pause the factory's pools\"},\"resumeProtocol()\":{\"notice\":\"Resume the factory's pools\"},\"revokePoolFactoryControl(address)\":{\"notice\":\"Revoke factory control over a pool's parameters\"},\"setPoolDynamicCoverageFeesHorizon(address,uint256)\":{\"notice\":\"Sets a pool's dynamic coverage fees horizon\"},\"setPoolDynamicCoverageFeesZ(address,uint64)\":{\"notice\":\"Sets a pool's dynamic coverage fees Z\"},\"setPoolMaxPriceUnpegRatio(address,uint256)\":{\"notice\":\"Sets a pool's maximum price unpeg ratio\"},\"setPoolPriceStatisticsLookbackInRound(address,uint8)\":{\"notice\":\"Sets a pool's price statistics lookback in round\"},\"setPoolPriceStatisticsLookbackInSec(address,uint64)\":{\"notice\":\"Sets a pool's price statistics lookback in seconds\"},\"setPoolPriceStatisticsLookbackStepInRound(address,uint8)\":{\"notice\":\"Sets a pool's statistics lookback step in round\"},\"setPoolSwapFee(address,uint256)\":{\"notice\":\"Sets a pool's swap fee\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"whenNotPaused()\":{\"notice\":\"Reverts pools if the factory is paused\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded4aa77b7b8f222a2d992eb95b03592be3250b826b6a38a4c790d2dec8b0d47\",\"dweb:/ipfs/QmNUKpTKXWsBBNMyzZuYvEZ2pUhZ2zEhQuyvxYZpTwo4eT\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"project:/contracts/ChainlinkUtils.sol\":{\"keccak256\":\"0x92c7b0add9b226131769fa0fd102089706545be59f8ac56aaa737851fd3e42a1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8af18f15246325c674775b50ff5acf4a77871f22302efa4bd906f08f39881e9\",\"dweb:/ipfs/QmQrkkqRYqgS1T3xZK3Ksj39XfR2CW4ZeqCkEzNVAD8y52\"]},\"project:/contracts/Const.sol\":{\"keccak256\":\"0xac1d01ad6f372f9f9feb4dfe33abb306de8894210e5c5b30d84faed91c3eb09d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9c0eb1c5d783b180888716071b056b6bb42c40f52536b8f8d08c41515ebf5067\",\"dweb:/ipfs/QmP9X64ezptUbVtL9tTZpscJSqj4KCFc83EiWQsgHDswip\"]},\"project:/contracts/Errors.sol\":{\"keccak256\":\"0x074b9852abcef6135139eb02838b65d4dc9492836c819f2fdab4eb8d04e470af\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dabe256dc3850b42e5b0a7e0ad786a0ae1222ab32de5c02d8c07035376a0ceec\",\"dweb:/ipfs/Qmc4zJQVfYYnzKrG5i91kicSnUXT7wYGf9a7TCxLi3CyHf\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0x75e4baf78ed1ac63eaa39d3599567aeab2fad778b829c17dd2a0bcdbede9d221\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://068e9823adac20330fd7d7ad0af554ea81fc0106aa20f73a7a8abbfc49a8588c\",\"dweb:/ipfs/QmQCynp9Duu7ZRhoq1TPLV26zjozJqcw98B95Nugjdd2he\"]},\"project:/contracts/GeometricBrownianMotionOracle.sol\":{\"keccak256\":\"0xe98e7a9e0eda84a20487ddf046484c469d84d2d3593098ded4ee76322be0c738\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1006ef10fde06480402b4f33a63d809b122c33cafa6df9cda6784c9091d20353\",\"dweb:/ipfs/QmZfjNW1KoaSTtouqcfteg489vrDUmjqoVk3XoAVaxJQBa\"]},\"project:/contracts/LogExpMath.sol\":{\"keccak256\":\"0xd0c514c1a2736c480eb88f8372dc01ccbed31315f7fb14c85a7f1bf3b7f4e367\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7150a549cc7fb45919bc3ac18eedf6caa1cad13c223fcb5952389700ec9c0d3\",\"dweb:/ipfs/QmbP1mmMXAa3jYedGvYvVakzhLCMJgVwvCRDzK5MmSq8iH\"]},\"project:/contracts/Math.sol\":{\"keccak256\":\"0x07d79a1ac2b5774670f6dc9f9ced771b6a75e0021b0b16eb9ce46a13241b84dd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1b96ce1cc2d3a3a7a0d47656cd50a582379e1e355669b219bc5e4e25d62f55a7\",\"dweb:/ipfs/Qmbj7Nm75w45XuAQ7Y2qbetPvBeLwXwasKpZ8bp3TSxNm8\"]},\"project:/contracts/Num.sol\":{\"keccak256\":\"0x946fcced1149773ed5604c8d585985cf34001e366a8971dd58b022ceffc39250\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://703c14b2179337a3c21994e5a176b327e4b681682fc92e446f7c592391e28f0b\",\"dweb:/ipfs/QmbDYQw3SLybk78F9KvqFcEvjGmVJ54oMkUnAgEQcQLeww\"]},\"project:/contracts/Pool.sol\":{\"keccak256\":\"0x369780b24f441e2b6c14e702192f084efff1889718f57bb1637dafe6551f0297\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://864c4f9721b6abd460a2efb3059a9448a12703e8e5a630e24352521dfa93050f\",\"dweb:/ipfs/QmZogrBCyQxXEYWG8fnq3fcs6K7YyrvF2K1okk9d1RpHiv\"]},\"project:/contracts/PoolToken.sol\":{\"keccak256\":\"0x65e20f3ab7b31fe277ba3167e26c576f34bdcc61eedd50a8fb41130453138f82\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8be096592ac8001837b66a562e68ba68dfc1deb82e65c37ca2786f4495bb4e8e\",\"dweb:/ipfs/QmZDgEw6J2Jkkugx1Y2WBLepjHtikaUnVxnkuvfMJ6o14U\"]},\"project:/contracts/interfaces/IDecimals.sol\":{\"keccak256\":\"0xd3ca1da0173009154e07c042107437915c0e977ae2dc754aeaba2283865e8489\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e1b5f4c0da0cf1aafeee15a5cd0dc308beb0728c1450a2542a9a0d64e95d2b71\",\"dweb:/ipfs/QmQaQpwcTpctT38Z4gto8voXdaxu6hEbLx1B5uesB4mNq6\"]},\"project:/contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0xfc4038d8014376f2a4db8049cb5767ae746a6c0fa4113b698c66c130278b1ec7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0280d6a2657e4c2cc02ebb052febd81e83ced5bc8337e99c3fd094f84ae0c5db\",\"dweb:/ipfs/Qmdbz9cvSueHNd3AVJGS5QW4Mas4oUid8BUFKmXh7rJGJt\"]},\"project:/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x54d8b6ecca41f1dc094c90aa60f88e869dbd34e40d7fc4b0a851b1e51d1e7f4c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://94c7792ed7b815b6c8b9df9b9f31d5a9e6e21e57321f9480f6fe099cba53fa1a\",\"dweb:/ipfs/QmXAj1jcnS7QAqB3RWvgyrdjsWQP7H6T72rerAMpHeJpPP\"]},\"project:/contracts/interfaces/IPoolHelpers/IPoolControl.sol\":{\"keccak256\":\"0x7f2faf91aef32dea8157c57e6b521c63192f19d79e7c47131728162d54824f1a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bcdfa9c3f0cf9ab48be5532c97664003ae1a1609f9bb4fae41d0554860d72aa0\",\"dweb:/ipfs/QmQJbavmxoE1QdJHe4d8SKN67R66zw9iVebNgV6MDoHyno\"]},\"project:/contracts/interfaces/IPoolHelpers/IPoolEvents.sol\":{\"keccak256\":\"0x76b71ec5ad9abb3dcdee1d16ca48b6600a27f1993f27bc84755c1c1fe8bbce8f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6ed3058966afccbc63731e80e47fbbe1d39fd13dd7f75e7decbfe9cee482cdc\",\"dweb:/ipfs/Qmd7JoWWtY2ajddVJeg27uwUnW98kh1wP9rCnSrgF4J7f3\"]},\"project:/contracts/interfaces/IPoolHelpers/IPoolLP.sol\":{\"keccak256\":\"0x493fe0a62bc08442ff0e50151e492e4089cd3da20728da299184421c170820f8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7cc04058dc9c7bc38cf08769bb88608725eaaf4c9097d555f6e38ec7b716cf71\",\"dweb:/ipfs/QmXRdT8UmpLxfVKKENkB37BsKSFfg3c1euE5gqHFJzZj4r\"]},\"project:/contracts/interfaces/IPoolHelpers/IPoolState.sol\":{\"keccak256\":\"0xad581b3d23bd3b1e58a4c1010ba4faf25e6d89ef7f542ce4413f5a1b905e1ab8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5997f7813c4d47f7599d9ea123c1b5e1a5d62dcbf387eed99bcefc227778765f\",\"dweb:/ipfs/Qmet2hZypVLNwqTx4JmF4A1St95dLhcbTCoHc6hX5PKaXY\"]},\"project:/contracts/interfaces/IPoolHelpers/IPoolSwap.sol\":{\"keccak256\":\"0xc257ac550d545ba2f4b37f174d7846b0dc3b3b9d7859cec23047930c93e994a8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fece7de48423c9682407357a40e8cd95490036ab599e25121a19633313c1c670\",\"dweb:/ipfs/QmP4Skaqpf6XARq32hECf83ictdZHmScQALteCdnFmigF5\"]},\"project:/contracts/interfaces/IPoolHelpers/IPoolToken.sol\":{\"keccak256\":\"0x5762c07e2b1a11d05a2eda39cdaf74fcd0e75870da19070001d83135ecd4b518\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3d419ffc6670007a4b10f48211f6d07389b88b3cdb0232a5efb0b5d75ec03d58\",\"dweb:/ipfs/QmSG38QxNige1BfGocSbZZ3BkCRG9TkTpmwgMKPu2XXtHK\"]},\"project:/contracts/structs/Struct.sol\":{\"keccak256\":\"0xa20064336fc210e1b46d4d221edd1a322979c941f6232123003d3fc672812905\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41d1ceb8854f9839af870beed96413805698f1704b3ff0ff52c5d2fd8a973b38\",\"dweb:/ipfs/QmWhjxkicHDneF8TKpmmMFkbDzsXTmCQeKin4gMsEovCip\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50600280546001600160a01b03191633179055610030624f1a0042610041565b6001600160401b031660805261007a565b60006001600160401b0382811684821680830382111561007157634e487b7160e01b600052601160045260246000fd5b01949350505050565b608051615f4761009c600039600081816104cf015261082e0152615f476000f3fe60806040523480156200001157600080fd5b5060043610620000ff5760003560e01c806374d0e98a116200009e57806374d0e98a14620001d857806379ba509714620001ef578063a445287614620001f9578063af1224f01462000210578063bde9e3221462000222578063d4122abd1462000239578063dbf624891462000250578063f2fde38b146200025a578063f7f16d72146200027157600080fd5b806306ec16f814620001045780630bb3fcf1146200011d5780630f11779b146200013457806325c6bdfd14620001565780633bdb7010146200016057806351089f1614620001775780635b16ebb7146200018e5780635c2dc4f014620001ce575b600080fd5b6200011b6200011536600462000c99565b62000288565b005b6200011b6200012e36600462000cb7565b62000323565b6200013e620003bc565b6040516200014d919062000cf8565b60405180910390f35b6200011b620004bf565b6200011b6200017136600462000d0c565b62000511565b6200011b6200018836600462000c99565b62000574565b620001bd6200019f36600462000c99565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020016200014d565b6200011b62000602565b6200011b620001e936600462000cb7565b6200061f565b6200011b62000683565b6200011b6200020a36600462000d39565b620006f9565b6002546001600160a01b03166200013e565b6200011b6200023336600462000d39565b62000765565b6200011b6200024a36600462000d0c565b620007d1565b6200011b6200081e565b6200011b6200026b36600462000c99565b62000876565b6200011b6200028236600462000d0c565b620008cc565b620002926200092f565b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190620002c390309060040162000cf8565b602060405180830381865afa158015620002e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000307919062000d76565b90506200031f6001600160a01b03831633836200094a565b5050565b6200032d6200092f565b6001600160a01b0382166000908152602081905260409020548290620003589060ff166011620009a3565b6040516301e619cb60e51b815260ff831660048201526001600160a01b03841690633cc33960906024015b600060405180830381600087803b1580156200039e57600080fd5b505af1158015620003b3573d6000803e3d6000fd5b50505050505050565b600254600090620003da90600160a01b900460ff16156024620009a3565b6000604051620003ea9062000c6e565b604051809103906000f08015801562000407573d6000803e3d6000fd5b506001600160a01b038116600081815260208190526040808220805460ff1916600117905551929350909133917f8ccec77b0cb63ac2cafd0f5de8cdfadab91ce656d262240ba8a6343bccc5f94591a36040516329dcbe5f60e01b81526001600160a01b038216906329dcbe5f906200048590339060040162000cf8565b600060405180830381600087803b158015620004a057600080fd5b505af1158015620004b5573d6000803e3d6000fd5b5092949350505050565b620004c96200092f565b620005027f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff164210602d620009a3565b6002805460ff60a01b19169055565b6200051b6200092f565b6001600160a01b0382166000908152602081905260409020548290620005469060ff166011620009a3565b60405163acb21b3160e01b8152600481018390526001600160a01b0384169063acb21b319060240162000383565b6200057e6200092f565b6001600160a01b0381166000908152602081905260409020548190620005a99060ff166011620009a3565b816001600160a01b0316637104e93e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005e557600080fd5b505af1158015620005fa573d6000803e3d6000fd5b505050505050565b6002546200061d90600160a01b900460ff16156024620009a3565b565b620006296200092f565b6001600160a01b0382166000908152602081905260409020548290620006549060ff166011620009a3565b6040516222edd760e51b815260ff831660048201526001600160a01b0384169063045dbae09060240162000383565b6001546200069e906001600160a01b031633146014620009a3565b600280546001600160a01b0319808216339081179093556001805490911690556040516001600160a01b03909116919082907fb71aa4aa3670aacb42b0301b8a96f5358e0558282008c187078e90da32efa57390600090a350565b620007036200092f565b6001600160a01b03821660009081526020819052604090205482906200072e9060ff166011620009a3565b604051633c515d9960e01b815267ffffffffffffffff831660048201526001600160a01b03841690633c515d999060240162000383565b6200076f6200092f565b6001600160a01b03821660009081526020819052604090205482906200079a9060ff166011620009a3565b6040516314e38a1760e21b815267ffffffffffffffff831660048201526001600160a01b0384169063538e285c9060240162000383565b620007db6200092f565b6040516334e1990760e01b8152600481018290526001600160a01b038316906334e1990790602401600060405180830381600087803b158015620005e557600080fd5b620008286200092f565b620008617f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff164210602d620009a3565b6002805460ff60a01b1916600160a01b179055565b620008806200092f565b600180546001600160a01b0319166001600160a01b03831690811790915560405133907f5c1a93490d96bd82224bd015d0d93a0afbee6335c30aad9135cedc53d6be620c90600090a350565b620008d66200092f565b6001600160a01b0382166000908152602081905260409020548290620009019060ff166011620009a3565b60405163314d204f60e01b8152600481018390526001600160a01b0384169063314d204f9060240162000383565b6002546200061d906001600160a01b031633146022620009a3565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526200099e908490620009b4565b505050565b816200031f576200031f8162000a91565b600062000a0b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662000ada9092919063ffffffff16565b8051909150156200099e578080602001905181019062000a2c919062000d90565b6200099e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6030600a820601600a820491506030600a8306018060081b82016753574141502300000160c01b91505062461bcd60e51b60005260206004526008602452806044525060646000fd5b606062000aeb848460008562000af5565b90505b9392505050565b60608247101562000b585760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000a88565b6001600160a01b0385163b62000bb15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000a88565b600080866001600160a01b0316858760405162000bcf919062000de7565b60006040518083038185875af1925050503d806000811462000c0e576040519150601f19603f3d011682016040523d82523d6000602084013e62000c13565b606091505b509150915062000c2582828662000c30565b979650505050505050565b6060831562000c4157508162000aee565b82511562000c525782518084602001fd5b8160405162461bcd60e51b815260040162000a88919062000e05565b6150d78062000e3b83390190565b80356001600160a01b038116811462000c9457600080fd5b919050565b60006020828403121562000cac57600080fd5b62000aee8262000c7c565b6000806040838503121562000ccb57600080fd5b62000cd68362000c7c565b9150602083013560ff8116811462000ced57600080fd5b809150509250929050565b6001600160a01b0391909116815260200190565b6000806040838503121562000d2057600080fd5b62000d2b8362000c7c565b946020939093013593505050565b6000806040838503121562000d4d57600080fd5b62000d588362000c7c565b9150602083013567ffffffffffffffff8116811462000ced57600080fd5b60006020828403121562000d8957600080fd5b5051919050565b60006020828403121562000da357600080fd5b8151801515811462000aee57600080fd5b60005b8381101562000dd157818101518382015260200162000db7565b8381111562000de1576000848401525b50505050565b6000825162000dfb81846020870162000db4565b9190910192915050565b602081526000825180602084015262000e2681604085016020870162000db4565b601f01601f1916919091016040019291505056fe60a06040523480156200001157600080fd5b50600a8054600160501b600160f01b031916336a010000000000000000000081029190911790915560805262000053620f4240670de0b6b3a764000062000115565b6009556005805461ffff60201b19166504050000000017905562000081670de0b6b3a7640000600662000138565b600580546001600160401b0392909216660100000000000002600160301b600160701b0319909216919091178155620000c490670de0b6b3a76400009062000138565b600655610e10600755620000e26028670de0b6b3a764000062000115565b620000f690670de0b6b3a76400006200015a565b60085562000175565b634e487b7160e01b600052601160045260246000fd5b6000826200013357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615620001555762000155620000ff565b500290565b60008219821115620001705762000170620000ff565b500190565b608051614f15620001c260003960008181611205015281816119f501528181611b0d01528181611c4001528181612130015281816126a4015281816128ce015261328f0152614f156000f3fe608060405234801561001057600080fd5b50600436106102cc5760003560e01c806386d460621161017d578063b849a206116100d9578063d73dd62311610092578063d73dd623146106ae578063dd62ed3e146106c1578063ea45766b146106fa578063f2fde38b1461070d578063f8b2cb4f14610720578063fde924f714610733578063fe834dfd1461073b57600080fd5b8063b849a20614610647578063c09fa8b41461065a578063c34351711461066d578063d04ee53f14610680578063d0fffbdb14610693578063d4cadf68146106a657600080fd5b80639d4e7e3a116101365780639d4e7e3a146105cb578063a1f26854146105d3578063a9059cbb146105e6578063aa6ca808146105f9578063ab323b491461060e578063acb21b3114610621578063b02f0b731461063457600080fd5b806386d4606214610543578063895c253a146105565780638c28cbe81461057e5780638d4e408314610591578063948d8ce61461059957806395d89b41146105ac57600080fd5b80633c515d991161022c578063626f7291116101e5578063626f72911461046d578063661884631461048e5780636a9b7c88146104a157806370a08231146104c25780637104e93e146104eb57806379ba5097146104f3578063812d8628146104fb57600080fd5b80633c515d99146104065780633cc339601461041957806349b595521461042c5780634bb278f31461043f5780634f69c0d414610447578063538e285c1461045a57600080fd5b806329dcbe5f1161028957806329dcbe5f146103835780632f37b624146103965780633018205f146103a9578063313ce567146103be578063314d204f146103cd57806334e19907146103e05780633b4ea29d146103f357600080fd5b8063045dbae0146102d157806306fdde03146102e6578063095ea7b3146103245780631446a7ff1461034757806318160ddd1461036857806323b872dd14610370575b600080fd5b6102e46102df366004614447565b61075b565b005b60408051808201909152601081526f29bbb0b0b8102837b7b6102a37b5b2b760811b60208201525b60405161031b91906144bc565b60405180910390f35b6103376103323660046144e6565b6107aa565b604051901515815260200161031b565b61035a610355366004614510565b610805565b60405190815260200161031b565b60025461035a565b61033761037e366004614543565b610919565b6102e461039136600461457f565b6109f8565b6103376103a436600461457f565b610aa3565b6103b1610ada565b60405161031b919061459a565b6040516012815260200161031b565b6102e46103db3660046145ae565b610b05565b6102e46103ee3660046145ae565b610b4a565b61035a6104013660046144e6565b610bb1565b6102e46104143660046145c7565b610bd7565b6102e4610427366004614447565b610c1f565b6102e461043a3660046145fe565b610c7c565b6102e4610cdf565b6102e461045536600461461b565b610d8b565b6102e46104683660046145ae565b610f12565b61048061047b3660046144e6565b610f46565b60405161031b9291906146d4565b61033761049c3660046144e6565b6110d3565b6104b46104af3660046146ed565b6111a9565b60405161031b92919061473b565b61035a6104d036600461457f565b6001600160a01b031660009081526020819052604090205490565b6102e46111ef565b6102e4611242565b6105036112c9565b6040805160ff97881681529690951660208701526001600160401b03909316938501939093526060840152608083019190915260a082015260c00161031b565b6102e4610551366004614795565b61132f565b6105696105643660046146ed565b61147a565b6040805192835260208301919091520161031b565b6102e461058c36600461457f565b6115b2565b61033761167a565b61035a6105a736600461457f565b61169e565b60408051808201909152600381526214d41560ea1b602082015261030e565b6102e4611705565b61035a6105e13660046147e4565b61173c565b6103376105f43660046144e6565b611a31565b610601611a47565b60405161031b9190614817565b6102e461061c366004614795565b611abc565b6102e461062f3660046145ae565b611aef565b6102e461064236600461461b565b611bc0565b61035a6106553660046147e4565b611da0565b6104b46106683660046146ed565b611e75565b6102e461067b36600461457f565b611eac565b6103b161068e36600461457f565b612161565b6105696106a13660046146ed565b6121bb565b61035a6122ff565b6103376106bc3660046144e6565b61231a565b61035a6106cf366004614510565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61035a61070836600461457f565b61238e565b6102e461071b36600461457f565b6123e8565b61035a61072e36600461457f565b612451565b6103376124ab565b61074e6107493660046145ae565b6124ce565b60405161031b9190614864565b61076361260a565b61076b612646565b610773612667565b610785600160ff8316101560356126ed565b6005805465ff00000000001916600160281b60ff8416021790556107a76126ff565b50565b3360008181526001602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020614ec0833981519152906107f39086815260200190565b60405180910390a35060015b92915050565b6005546000906108199060ff1615826126ed565b6001600160a01b0383166000908152600460205260409020546108649060ff16801561085d57506001600160a01b03831660009081526004602052604090205460ff165b60026126ed565b600061086f8461270b565b9050600061087c8461270b565b825160208082015160409283015184519283015192840151935163a221ee4960e01b815294955073__Math__________________________________9463a221ee49946108cf9491600090600401614877565b602060405180830381865af41580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610910919061489a565b95945050505050565b6000336001600160a01b0385161480159061095957506001600160a01b038416600090815260016020908152604080832033845290915290205460001914155b156109e2576001600160a01b03841660009081526001602090815260408083203384529091529020546109908382101560156126ed565b6001600160a01b038581166000908152600160209081526040808320338085529083529281902087860390819055905190815292871692600080516020614ec0833981519152910160405180910390a3505b6109ed848484612810565b5060015b9392505050565b610a00612646565b600a54610a2090600160501b90046001600160a01b0316331460036126ed565b610a366001600160a01b0382161515600d6126ed565b600a8054600160501b600160f01b031916600160501b6001600160a01b03841690810291909117909155600b80546001600160a01b031916905560405133907fe9cdd2997ec8c6ef6ac8fa0a086751d7333153fd3c16c2d7ddd28a183bf5020b90600090a36107a76126ff565b600554600090610ab79060ff1615826126ed565b506001600160a01b03811660009081526004602052604090205460ff165b919050565b600554600090610aee9060ff1615826126ed565b50600a54600160501b90046001600160a01b031690565b610b0d61260a565b610b15612646565b610b1d612667565b610b3d610b33670de0b6b3a764000060016148c9565b82101560166126ed565b60068190556107a76126ff565b610b5261260a565b610b5a612646565b610b62612667565b610b84610b7a620f4240670de0b6b3a76400006148e8565b821015600e6126ed565b610ba4610b9a600a670de0b6b3a76400006148e8565b821115600f6126ed565b60098190556107a76126ff565b600554600090610bc59060ff1615826126ed565b610bcd6128cc565b6109f18383612939565b610bdf61260a565b610be7612646565b610bef612667565b600580546dffffffffffffffff0000000000001916600160301b6001600160401b038416021790556107a76126ff565b610c2761260a565b610c2f612646565b610c37612667565b610c49600160ff8316101560186126ed565b610c5b606460ff8316111560196126ed565b6005805464ff000000001916600160201b60ff8416021790556107a76126ff565b610c8461260a565b610c8c612646565b600554610ca49062010000900460ff161560046126ed565b600a54610cc490600160501b90046001600160a01b0316331460036126ed565b6005805461ff001916610100831515021790556107a76126ff565b610ce761260a565b610cef612646565b600554610d079062010000900460ff161560046126ed565b600a54610d2790600160501b90046001600160a01b0316331460036126ed565b600354610d39906002111560126126ed565b6005805462ffff00191662010100179055610d65610d60670de0b6b3a764000060646148c9565b612b26565b610d8133610d7c670de0b6b3a764000060646148c9565b612b2f565b610d896126ff565b565b610d9361260a565b610d9b612646565b610da36128cc565b600554610dba9062010000900460ff1660016126ed565b600354610dca90821460366126ed565b6000610dd884600254612b39565b9050610de781151560056126ed565b60005b82811015610ef057600060038281548110610e0757610e0761490a565b60009182526020808320909101546001600160a01b03168083526004909152604082206001015490925090610e3c8583612b7f565b9050610e4b81151560056126ed565b610e71878786818110610e6057610e6061490a565b9050602002013582111560086126ed565b610e7b8183614920565b6001600160a01b0384166000818152600460205260409081902060010192909255905133907f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a90610ecf9085815260200190565b60405180910390a3610ee2833383612bc3565b836001019350505050610dea565b50610efa84612b26565b610f043385612b2f565b50610f0d6126ff565b505050565b610f1a61260a565b610f22612646565b610f2a612667565b610f396001821015601a6126ed565b60078190556107a76126ff565b600554600090606090610f5d9060ff1615836126ed565b610f656128cc565b600554610f7c9062010000900460ff1660016126ed565b6001600160a01b038416600090815260046020526040902054610fa39060ff1660026126ed565b6001600160a01b038416600090815260046020526040812060010154610fca908590612cde565b600254909150610fda8282612b7f565b9350610fe68482612b39565b9150610ff582151560056126ed565b600354806001600160401b0381111561101057611010614938565b604051908082528060200260200182016040528015611039578160200160208202803683370190505b50935060005b818110156110c85760006003828154811061105c5761105c61490a565b60009182526020808320909101546001600160a01b031680835260049091526040909120600101549091506110918682612b7f565b98506110a089151560056126ed565b888784815181106110b3576110b361490a565b6020908102919091010152505060010161103f565b505050509250929050565b3360009081526001602090815260408083206001600160a01b038616845290915281205480831115611128573360009081526001602090815260408083206001600160a01b0388168452909152812055611157565b611132838261494e565b3360009081526001602090815260408083206001600160a01b03891684529091529020555b3360008181526001602090815260408083206001600160a01b03891680855290835292819020549051908152919291600080516020614ec0833981519152910160405180910390a35060019392505050565b6111b1614380565b6111b96143a1565b6005546111cb9060ff161560006126ed565b6111d36128cc565b6111e08787878787612d07565b915091505b9550959350505050565b6111f761260a565b61122d336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161460066126ed565b6005805463ff00000019166301000000179055565b600b5461125b906001600160a01b03163314602f6126ed565b600a8054600160501b600160f01b03198116600160501b3381810292909217909355600b80546001600160a01b0319169055604051929091046001600160a01b03169182907fe9cdd2997ec8c6ef6ac8fa0a086751d7333153fd3c16c2d7ddd28a183bf5020b90600090a350565b6000806000806000806112ed600560009054906101000a900460ff161560006126ed565b5050600554600654600754600854600160201b840460ff90811699600160281b86049091169850600160301b9094046001600160401b03169650919450925090565b6001600160a01b0384166000908152600460205260409020546113579060ff1615601c6126ed565b60035461136890600811601d6126ed565b6040805160a08101825260018082526003805460ff9081166020808601918252600086880181815260608801828152608089018381526001600160a01b038f1680855260049095529983209851895495519251915161ffff1990961690151561ff0019161761010092871692909202919091176cffffffffffffffffffffff000019166201000091909516026cffffffffffffffffffff00000019169390931763010000006001600160501b0390931692909202919091178555945193830193909355805491820181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191690911790556114748484848461300a565b50505050565b60008061148561260a565b61148d612646565b6114956128cc565b6000806114a58989898989612d07565b81516001600160a01b038c166000908152600460205260408120600101805494965092945090926114d7908490614920565b90915550506001600160a01b0387166000908152600460205260408120600101805488929061150790849061494e565b909155505081516020808401516040808601518582015160608088015184519788529587018d90529286019390935290840152608083015260a08201526001600160a01b0380891691908b169033907fbdafe88494b31fc7436fe7992b0f377e874287e841e62eed1ad77e84f3c5b1719060c00160405180910390a461159289338460000151612bc3565b61159d8733886133a1565b905160209091015190925090506111e56126ff565b6115ba61260a565b6115c2612646565b6001600160a01b0381166000908152600460205260409020546115e99060ff1660026126ed565b6040516370a0823160e01b81526001600160a01b038216906370a082319061161590309060040161459a565b602060405180830381865afa158015611632573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611656919061489a565b6001600160a01b0382166000908152600460205260409020600101556107a76126ff565b60055460009061168e9060ff1615826126ed565b5060055462010000900460ff1690565b6005546000906116b29060ff1615826126ed565b6001600160a01b0382166000908152600460205260409020546116d99060ff1660026126ed565b506001600160a01b0316600090815260046020526040902054630100000090046001600160501b031690565b61170d61260a565b600a5461172d90600160501b90046001600160a01b0316331460036126ed565b6005805463ff00000019169055565b600061174661260a565b61174e612646565b6117566128cc565b60055461176d9062010000900460ff1660016126ed565b6001600160a01b0384166000908152600460205260409020546117949060ff1660026126ed565b61179c6143c9565b60606117a7866133b5565b6040805160808101825288815260095460208201529294509092506000919081016103e86117de670de0b6b3a764000060036148c9565b6117e891906148e8565b81526002546020918201526040805180820182526005546001600160401b03600160301b820416825260065482850152825160808101845260ff600160201b830481168252600754958201959095524281850152600160281b90910490931660608401529051631adb96dd60e31b81529293509173__Math__________________________________9063d6dcb6e89061188e90889088908890889088906004016149eb565b602060405180830381865af41580156118ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cf919061489a565b6001600160a01b038a1660009081526004602052604090206001015490965061192390611919906119096003670de0b6b3a76400006148e8565b611914906001614920565b612b7f565b871115603a6126ed565b5050506119348484101560096126ed565b82826000015160200181815161194a919061494e565b90525061195782826134da565b81516020908101516001600160a01b0388166000908152600490925260408220600101556119858682612b7f565b9050866001600160a01b0316336001600160a01b03167fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed866040516119cc91815260200190565b60405180910390a36119de3387613623565b6119f06119eb828861494e565b61362d565b611a1a7f000000000000000000000000000000000000000000000000000000000000000082612b2f565b611a258733866133a1565b5050505b6109f16126ff565b6000611a3e338484612810565b50600192915050565b600554606090611a5c9060ff161560006126ed565b6003805480602002602001604051908101604052809291908181526020018280548015611ab257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a94575b5050505050905090565b6001600160a01b038416600090815260046020526040902054611ae39060ff1660026126ed565b6114748484848461300a565b611af761260a565b611aff612646565b611b35336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161460066126ed565b600554611b4e906301000000900460ff161560076126ed565b611b81611b65610320670de0b6b3a76400006148e8565b611b7790670de0b6b3a7640000614920565b82101560376126ed565b611bb3611b97600a670de0b6b3a76400006148e8565b611ba990670de0b6b3a7640000614920565b82111560386126ed565b60088190556107a76126ff565b611bc861260a565b611bd0612646565b600554611be79062010000900460ff1660016126ed565b600354611bf790821460366126ed565b6000611c04846000612b7f565b90506000611c12828661494e565b90506000611c2282600254612cde565b9050611c3181151560056126ed565b611c3b3387613623565b611c657f000000000000000000000000000000000000000000000000000000000000000084612b2f565b611c6e8261362d565b60005b84811015611d9457600060038281548110611c8e57611c8e61490a565b60009182526020808320909101546001600160a01b03168083526004909152604082206001015490925090611cc38583613636565b9050611cd281151560056126ed565b611cf8898986818110611ce757611ce761490a565b9050602002013582101560096126ed565b6001600160a01b038316600090815260046020526040902060010154611d1f90829061494e565b6001600160a01b0384166000818152600460205260409081902060010192909255905133907fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed90611d739085815260200190565b60405180910390a3611d868333836133a1565b836001019350505050611c71565b50505050610f0d6126ff565b6000611daa61260a565b611db2612646565b611dba6128cc565b611dc48484612939565b9050611dd48282101560096126ed565b6001600160a01b038416600090815260046020526040902060010154611dfb908490614920565b6001600160a01b0385166000818152600460205260409081902060010192909255905133907f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a90611e4f9087815260200190565b60405180910390a3611e62843385612bc3565b611e6b81612b26565b611a293382612b2f565b611e7d614380565b611e856143a1565b600554611e979060ff161560006126ed565b611e9f6128cc565b6111e08787878787613657565b611eb461260a565b611ebc612646565b600a54611edc90600160501b90046001600160a01b0316331460036126ed565b6001600160a01b038116600090815260046020526040902054611f039060ff1660026126ed565b600554611f1b9062010000900460ff161560046126ed565b6001600160a01b03811660009081526004602052604081206001015490611f428282612b7f565b6001600160a01b038416600090815260046020526040902054600a54919250611f7e916001600160501b03630100000090920482169116614a8f565b600a80546001600160501b0319166001600160501b03929092169190911790556001600160a01b03831660009081526004602052604081205460035461010090910460ff169190611fd19060019061494e565b905060038181548110611fe657611fe661490a565b600091825260209091200154600380546001600160a01b039092169160ff85169081106120155761201561490a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816004600060038560ff168154811061205e5761205e61490a565b60009182526020808320909101546001600160a01b031683528201929092526040019020805460ff929092166101000261ff001990921691909117905560038054806120ac576120ac614ab7565b60008281526020808220830160001990810180546001600160a01b031990811690915593019093556001600160a01b038816815260048352604080822080546cffffffffffffffffffffffffff191681556001908101839055600c90945281208054909216825591015561212a8533612125868861494e565b6133a1565b612155857f0000000000000000000000000000000000000000000000000000000000000000856133a1565b505050506107a76126ff565b6005546000906121759060ff1615826126ed565b6001600160a01b03821660009081526004602052604090205461219c9060ff1660026126ed565b506001600160a01b039081166000908152600c60205260409020541690565b6000806121c661260a565b6121ce612646565b6121d66128cc565b6000806121e68989898989613657565b6001600160a01b038b16600090815260046020526040812060010180549395509193508a92612216908490614920565b909155505081516001600160a01b0388166000908152600460205260408120600101805490919061224890849061494e565b92505081905550866001600160a01b0316896001600160a01b0316336001600160a01b03167fbdafe88494b31fc7436fe7992b0f377e874287e841e62eed1ad77e84f3c5b1718b866000015187602001518860400151886040015189606001516040516122dd96959493929190958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405180910390a46122f089338a612bc3565b61159d873384600001516133a1565b6005546000906123139060ff1615826126ed565b5060095490565b3360009081526001602090815260408083206001600160a01b0386168452909152812054612349908390614920565b3360008181526001602090815260408083206001600160a01b03891680855290835292819020859055519384529092600080516020614ec083398151915291016107f3565b6005546000906123a29060ff1615826126ed565b6001600160a01b0382166000908152600460205260409020546123c99060ff1660026126ed565b506001600160a01b03166000908152600c602052604090206001015490565b6123f061260a565b600a5461241090600160501b90046001600160a01b0316331460036126ed565b60055462010000900460ff1661242f5760035461242f901560326126ed565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6005546000906124659060ff1615826126ed565b6001600160a01b03821660009081526004602052604090205461248c9060ff1660026126ed565b506001600160a01b031660009081526004602052604090206001015490565b6005546000906124bf9060ff1615826126ed565b50600554610100900460ff1690565b6005546060906124e39060ff161560006126ed565b6005546124fa9062010000900460ff1660016126ed565b6000612507836000612b7f565b90506000612515828561494e565b9050600061252582600254612cde565b600354909150806001600160401b0381111561254357612543614938565b60405190808252806020026020018201604052801561256c578160200160208202803683370190505b50945060005b818110156126005760006003828154811061258f5761258f61490a565b60009182526020808320909101546001600160a01b031680835260049091526040822060010154909250906125c48683613636565b90506125d381151560056126ed565b808985815181106125e6576125e661490a565b602002602001018181525050836001019350505050612572565b5050505050919050565b336001600160a01b03166000356001600160e01b0319166001600160e01b03191660003660405161263c929190614acd565b60405180910390a2565b6005546126589060ff161560006126ed565b6005805460ff19166001179055565b600a54600160501b90046001600160a01b031633141561269957600554610d899062010000900460ff161560046126ed565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156126e357600554610d89906301000000900460ff161560076126ed565b610d89600c6138f7565b816126fb576126fb816138f7565b5050565b6005805460ff19169055565b6127136143c9565b6001600160a01b038281166000818152600460209081526040808320815160a081018352815460ff8082161515835261010082048116838701526201000082041682850152630100000090046001600160501b031660608201526001918201546080820152948452600c8352818420825180840190935280549096168083529501549181019190915291926127a790613940565b905060006040518060600160405280856040015160ff168152602001856080015181526020016127f086606001516001600160501b031661191487602001518760400151613a13565b905260408051808201909152908152602081019290925250949350505050565b6128266001600160a01b038316151560236126ed565b6001600160a01b03831660009081526020819052604090205461284d8282101560136126ed565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290612884908490614920565b92505081905550826001600160a01b0316846001600160a01b0316600080516020614ea0833981519152846040516128be91815260200190565b60405180910390a350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c2dc4f06040518163ffffffff1660e01b815260040160006040518083038186803b15801561292557600080fd5b505afa158015611474573d6000803e3d6000fd5b6005546000906129539062010000900460ff1660016126ed565b6001600160a01b03831660009081526004602052604090205461297a9060ff1660026126ed565b6001600160a01b0383166000908152600460205260409020600101546129bb906129b1906119146002670de0b6b3a76400006148e8565b83111560396126ed565b6129c36143c9565b60606129ce856133b5565b6040805160808101825287815260095460208201529294509092506000919081016103e8612a05670de0b6b3a764000060036148c9565b612a0f91906148e8565b81526002546020918201526040805180820182526005546001600160401b03600160301b820416825260065482850152825160808101845260ff600160201b830481168252600754958201959095524281850152600160281b90910490931660608401529051632dbd333d60e01b81529293509173__Math__________________________________90632dbd333d90612ab590889088908890889088906004016149eb565b602060405180830381865af4158015612ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612af6919061489a565b9550868560000151602001818151612b0e9190614920565b905250612b1b8585613a1f565b505050505092915050565b6107a781613b71565b6126fb8282613bd7565b600080612b4e670de0b6b3a7640000856148c9565b90506000612b5d6002856148e8565b612b679083614920565b90506000612b7585836148e8565b9695505050505050565b600080612b8c83856148c9565b90506000612ba36002670de0b6b3a76400006148e8565b612bad9083614920565b90506000612b75670de0b6b3a7640000836148e8565b8281600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401612bf4919061459a565b602060405180830381865afa158015612c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c35919061489a565b612c3f9190614920565b9050612c566001600160a01b038716863087613be2565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190612c8590309060040161459a565b602060405180830381865afa158015612ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cc6919061489a565b9050612cd581831460346126ed565b50505050505050565b600080612cf3670de0b6b3a7640000856148c9565b9050612cff83826148e8565b949350505050565b612d0f614380565b612d176143a1565b6001600160a01b038716600090815260046020526040902054612d619060ff16801561085d57506001600160a01b03861660009081526004602052604090205460ff1660026126ed565b600554612d7790610100900460ff16600a6126ed565b6001600160a01b038516600090815260046020526040902060010154612db890612dae906119096003670de0b6b3a76400006148e8565b851115603a6126ed565b6000612dc38861270b565b90506000612dd08761270b565b825160208082015160409283015184519283015192840151600954945163a221ee4960e01b815295965073__Math__________________________________9563a221ee4995612e24959291600401614877565b602060405180830381865af4158015612e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e65919061489a565b808452612e7690861015600b6126ed565b612e8282828842613c4d565b9350612e96888560000151111560086126ed565b835182516020015173__Math__________________________________9163a221ee4991612ec49190614920565b845160400151845160200151612edb908b9061494e565b8560000151604001516009546040518663ffffffff1660e01b8152600401612f07959493929190614877565b602060405180830381865af4158015612f24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f48919061489a565b602084018190528351612f5e91101560056126ed565b6000612f6e846000015188612b7f565b612f79906001614920565b90508085600001511015612f8b578085525b612fe5600854612fdc612fb28760200151600954670de0b6b3a7640000611914919061494e565b6020808801516040908101518951519289015190910151885151612fd7939190613da5565b612b39565b1115602c6126ed565b5060209182015160409081015184820152910151015160608201529550959350505050565b61301261260a565b61301a612646565b6130226128cc565b600a5461304290600160501b90046001600160a01b0316331460036126ed565b60055461305a9062010000900460ff161560046126ed565b600b54613072906001600160a01b03161560336126ed565b613091670de0b6b3a76400006001600160501b0384161015601e6126ed565b6130c36130a7670de0b6b3a764000060326148c9565b6001600160501b0316836001600160501b03161115601f6126ed565b6130e76130dd64e8d4a51000670de0b6b3a76400006148e8565b84101560206126ed565b6001600160a01b0384166000908152600460205260409020546001600160501b0363010000009091048116908316811015613190576131268184614a8f565b600a5461313c91906001600160501b0316614afc565b600a80546001600160501b0319166001600160501b039290921691909117905561318b613172670de0b6b3a764000060326148c9565b600a546001600160501b039182169116111560216126ed565b6131ee565b806001600160501b0316836001600160501b031610156131ee57600a5483906131c39083906001600160501b0316614a8f565b6131cd9190614afc565b600a80546001600160501b0319166001600160501b03929092169190911790555b6001600160a01b038516600090815260046020526040902080546cffffffffffffffffffff000000191663010000006001600160501b038616021781556001018054908590558085111561325557613250863361324b848961494e565b612bc3565b6132b7565b808510156132b7576000613269868361494e565b90506000613278826000612b7f565b90506132898833612125848661494e565b6132b4887f0000000000000000000000000000000000000000000000000000000000000000836133a1565b50505b60008060006132c586613e3e565b9250925092506132d489613fac565b6132de9083614b27565b6001600160a01b038a81166000818152600460209081526040808320805462ff000019166201000060ff989098169790970296909617909555845180860186528b85168152808201898152848452600c90925291859020915182546001600160a01b031916941693909317815591516001929092019190915590517f367d74750f13eacb165ab505e06111727ad81829a67dd3fd6115c4d294ff1c039061338c908990879087908790614b4c565b60405180910390a250505050506114746126ff565b610f0d6001600160a01b0384168383614014565b6133bd6143c9565b60606133c88361270b565b6003549092506000906133dd9060019061494e565b9050806001600160401b038111156133f7576133f7614938565b60405190808252806020026020018201604052801561343057816020015b61341d6143c9565b8152602001906001900390816134155790505b5091506000805b828210156134d257856001600160a01b03166003828154811061345c5761345c61490a565b6000918252602090912001546001600160a01b0316146134ca576134a66003828154811061348c5761348c61490a565b6000918252602090912001546001600160a01b031661270b565b8483815181106134b8576134b861490a565b60200260200101819052508160010191505b600101613437565b505050915091565b6000805b82518110156114745773__Math__________________________________63a221ee498483815181106135135761351361490a565b602002602001015160000151602001518584815181106135355761353561490a565b6020026020010151600001516040015187600001516020015188600001516040015160006040518663ffffffff1660e01b8152600401613579959493929190614877565b602060405180830381865af4158015613596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135ba919061489a565b915061361b600854612fdc84612fd78786815181106135db576135db61490a565b602002602001015160200151604001518887815181106135fd576135fd61490a565b6020908102919091018101515151908b0151604001518b5151613da5565b6001016134de565b6126fb8282614044565b6107a78161404f565b60008061364383856148c9565b9050612cff670de0b6b3a7640000826148e8565b61365f614380565b6136676143a1565b6001600160a01b0387166000908152600460205260409020546136b19060ff16801561085d57506001600160a01b03861660009081526004602052604090205460ff1660026126ed565b6005546136c790610100900460ff16600a6126ed565b6001600160a01b038716600090815260046020526040902060010154613708906136fe906119146002670de0b6b3a76400006148e8565b87111560396126ed565b60006137138861270b565b905060006137208761270b565b825160208082015160409283015184519283015192840151600954945163a221ee4960e01b815295965073__Math__________________________________9563a221ee4995613774959291600401614877565b602060405180830381865af4158015613791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137b5919061489a565b8084526137c690861015600b6126ed565b6137d282828a426140ae565b93506137e6868560000151101560096126ed565b73__Math__________________________________63a221ee49898460000151602001516138149190614920565b845160400151875185516020015161382c919061494e565b8560000151604001516009546040518663ffffffff1660e01b8152600401613858959493929190614877565b602060405180830381865af4158015613875573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613899919061489a565b6020840181905283516138af91101560056126ed565b60006138bf898560000151612cde565b90508085600001511115612f8b57808552612fe5600854612fdc612fb28760200151600954670de0b6b3a7640000611914919061494e565b6030600a820601600a820491506030600a8306018060081b82016753574141502300000160c01b91505062461bcd60e51b60005260206004526008602452806044525060646000fd5b6139486143fe565b6000806000846001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561398b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139af9190614b7c565b50935050925092506139d1607882426139c8919061494e565b111560306126ed565b6139df6000831360106126ed565b604080516080810182526001600160a01b0390961686526001600160501b0390931660208601529184015260608301525090565b60006109f18284612b39565b6000805b82518110156114745773__Math__________________________________63a221ee49856000015160200151866000015160400151868581518110613a6a57613a6a61490a565b60200260200101516000015160200151878681518110613a8c57613a8c61490a565b6020026020010151600001516040015160006040518663ffffffff1660e01b8152600401613abe959493929190614877565b602060405180830381865af4158015613adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aff919061489a565b9150613b69600854612fdc84612fd7886020015160400151896000015160000151898881518110613b3257613b3261490a565b602002602001015160200151604001518a8981518110613b5457613b5461490a565b60200260200101516000015160000151613da5565b600101613a23565b30600090815260208190526040902054613b8c908290614920565b30600090815260208190526040902055600254613baa908290614920565b6002556040518181523090600090600080516020614ea0833981519152906020015b60405180910390a350565b6126fb308383612810565b6040516001600160a01b03808516602483015283166044820152606481018290526114749085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614195565b613c55614380565b60408051606081018252848152600954602082015260009181016103e8613c85670de0b6b3a764000060036148c9565b613c8f91906148e8565b90526040805180820182526005546001600160401b03600160301b8204168252600654602080840191909152835160808101855260ff600160201b840481168252600754828401528186018a9052600160281b90930490921660608301528a8101518401518b5151918b0151909401518a51519596509294919373__Math__________________________________9363b2a3e6d4938d938d93613d34939092613da5565b8787876040518763ffffffff1660e01b8152600401613d5896959493929190614bd4565b606060405180830381865af4158015613d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d999190614c37565b98975050505050505050565b60008160ff168460ff161115613df157613dea613de484670de0b6b3a7640000613dcf8689614c92565b613dda90600a614d99565b61191491906148c9565b86612b39565b9050612cff565b8160ff168460ff161015613e3457613dea613e0c8487612b39565b670de0b6b3a7640000613e1f8786614c92565b613e2a90600a614d99565b612fd791906148c9565b613dea8386612b39565b60008060606000849050600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015613e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ead9190614b7c565b50935050925050613ec5607882426139c8919061494e565b613ed36000831360106126ed565b81836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f369190614da8565b846001600160a01b0316637284e4166040518163ffffffff1660e01b8152600401600060405180830381865afa158015613f74573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613f9c9190810190614dc5565b9550955095505050509193909250565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015614008575060408051601f3d908101601f1916820190925261400591810190614da8565b60015b6107ff57506000919050565b6040516001600160a01b038316602482015260448101829052610f0d90849063a9059cbb60e01b90606401613c16565b6126fb823083612810565b3060009081526020819052604090205461406a90829061494e565b3060009081526020819052604090205560025461408890829061494e565b6002556040518181526000903090600080516020614ea083398151915290602001613bcc565b6140b6614380565b60408051606081018252848152600954602082015260009181016103e86140e6670de0b6b3a764000060036148c9565b6140f091906148e8565b90526040805180820182526005546001600160401b03600160301b8204168252600654602080840191909152835160808101855260ff600160201b840481168252600754828401528186018a9052600160281b90930490921660608301528a8101518401518b5151918b0151909401518a51519596509294919373__Math__________________________________9363f1913050938d938d93613d34939092613da5565b60006141ea826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661426c9092919063ffffffff16565b805190915015610f0d57808060200190518101906142089190614e66565b610f0d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6060612cff8484600085856001600160a01b0385163b6142ce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401614263565b600080866001600160a01b031685876040516142ea9190614e83565b60006040518083038185875af1925050503d8060008114614327576040519150601f19603f3d011682016040523d82523d6000602084013e61432c565b606091505b509150915061433c828286614347565b979650505050505050565b606083156143565750816109f1565b8251156143665782518084602001fd5b8160405162461bcd60e51b815260040161426391906144bc565b60405180606001604052806000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000918101828152606082018390526080820192909252908152602081016143f96143fe565b905290565b604051806080016040528060006001600160a01b0316815260200160006001600160501b0316815260200160008152602001600081525090565b60ff811681146107a757600080fd5b60006020828403121561445957600080fd5b81356109f181614438565b60005b8381101561447f578181015183820152602001614467565b838111156114745750506000910152565b600081518084526144a8816020860160208601614464565b601f01601f19169290920160200192915050565b6020815260006109f16020830184614490565b80356001600160a01b0381168114610ad557600080fd5b600080604083850312156144f957600080fd5b614502836144cf565b946020939093013593505050565b6000806040838503121561452357600080fd5b61452c836144cf565b915061453a602084016144cf565b90509250929050565b60008060006060848603121561455857600080fd5b614561846144cf565b925061456f602085016144cf565b9150604084013590509250925092565b60006020828403121561459157600080fd5b6109f1826144cf565b6001600160a01b0391909116815260200190565b6000602082840312156145c057600080fd5b5035919050565b6000602082840312156145d957600080fd5b81356001600160401b03811681146109f157600080fd5b80151581146107a757600080fd5b60006020828403121561461057600080fd5b81356109f1816145f0565b60008060006040848603121561463057600080fd5b8335925060208401356001600160401b038082111561464e57600080fd5b818601915086601f83011261466257600080fd5b81358181111561467157600080fd5b8760208260051b850101111561468657600080fd5b6020830194508093505050509250925092565b600081518084526020808501945080840160005b838110156146c9578151875295820195908201906001016146ad565b509495945050505050565b828152604060208201526000612cff6040830184614699565b600080600080600060a0868803121561470557600080fd5b61470e866144cf565b945060208601359350614723604087016144cf565b94979396509394606081013594506080013592915050565b825181526020808401518183015260408085015181840152835160608085019190915291840151608084015283015160a083015282015160c082015260e081016109f1565b6001600160501b03811681146107a757600080fd5b600080600080608085870312156147ab57600080fd5b6147b4856144cf565b93506020850135925060408501356147cb81614780565b91506147d9606086016144cf565b905092959194509250565b6000806000606084860312156147f957600080fd5b614802846144cf565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156148585783516001600160a01b031683529284019291840191600101614833565b50909695505050505050565b6020815260006109f16020830184614699565b948552602085019390935260408401919091526060830152608082015260a00190565b6000602082840312156148ac57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156148e3576148e36148b3565b500290565b60008261490557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60008219821115614933576149336148b3565b500190565b634e487b7160e01b600052604160045260246000fd5b600082821015614960576149606148b3565b500390565b8051805160ff16835260208082015181850152604091820151828501529182015180516001600160a01b0316606080860191909152928101516001600160501b031660808501529081015160a0840152015160c090910152565b60ff8151168252602081015160208301526040810151604083015260ff60608201511660608301525050565b60006102408083016149fd848a614965565b60e084810192909252875190819052610260840191602091828a0160005b82811015614a3e57614a2e868351614965565b9483019490840190600101614a1b565b505088516101008701525050506020860151610120840152604086015161014084015260608601516101608401529050835161018083015260208401516101a0830152612b756101c08301846149bf565b60006001600160501b0383811690831681811015614aaf57614aaf6148b3565b039392505050565b634e487b7160e01b600052603160045260246000fd5b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60006001600160501b03808316818516808303821115614b1e57614b1e6148b3565b01949350505050565b600060ff821660ff84168060ff03821115614b4457614b446148b3565b019392505050565b60018060a01b038516815283602082015260ff83166040820152608060608201526000612b756080830184614490565b600080600080600060a08688031215614b9457600080fd5b8551614b9f81614780565b809550506020860151935060408601519250606086015191506080860151614bc681614780565b809150509295509295909350565b6103008101614be38289614965565b614bf060e0830188614965565b6101c0820186905284516101e0830152602085015161020083015260408501516102208301528351610240830152602084015161026083015261433c6102808301846149bf565b600060608284031215614c4957600080fd5b604051606081018181106001600160401b0382111715614c6b57614c6b614938565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600060ff821660ff841680821015614cac57614cac6148b3565b90039392505050565b600181815b80851115614cf0578160001904821115614cd657614cd66148b3565b80851615614ce357918102915b93841c9390800290614cba565b509250929050565b600082614d07575060016107ff565b81614d14575060006107ff565b8160018114614d2a5760028114614d3457614d50565b60019150506107ff565b60ff841115614d4557614d456148b3565b50506001821b6107ff565b5060208310610133831016604e8410600b8410161715614d73575081810a6107ff565b614d7d8383614cb5565b8060001904821115614d9157614d916148b3565b029392505050565b60006109f160ff841683614cf8565b600060208284031215614dba57600080fd5b81516109f181614438565b600060208284031215614dd757600080fd5b81516001600160401b0380821115614dee57600080fd5b818401915084601f830112614e0257600080fd5b815181811115614e1457614e14614938565b604051601f8201601f19908116603f01168101908382118183101715614e3c57614e3c614938565b81604052828152876020848701011115614e5557600080fd5b61433c836020830160208801614464565b600060208284031215614e7857600080fd5b81516109f1816145f0565b60008251614e95818460208701614464565b919091019291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a26469706673582212200500981b356ba740425f7cf6c845a7370658dabbfb717b848962643ac68617f664736f6c634300080c0033a2646970667358221220b42c5bf457ddc47f2923ebcb4aa0ce1ffa6cf474f5c51e8fdfdd54ddb9efdfe564736f6c634300080c0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ff5760003560e01c806374d0e98a116200009e57806374d0e98a14620001d857806379ba509714620001ef578063a445287614620001f9578063af1224f01462000210578063bde9e3221462000222578063d4122abd1462000239578063dbf624891462000250578063f2fde38b146200025a578063f7f16d72146200027157600080fd5b806306ec16f814620001045780630bb3fcf1146200011d5780630f11779b146200013457806325c6bdfd14620001565780633bdb7010146200016057806351089f1614620001775780635b16ebb7146200018e5780635c2dc4f014620001ce575b600080fd5b6200011b6200011536600462000c99565b62000288565b005b6200011b6200012e36600462000cb7565b62000323565b6200013e620003bc565b6040516200014d919062000cf8565b60405180910390f35b6200011b620004bf565b6200011b6200017136600462000d0c565b62000511565b6200011b6200018836600462000c99565b62000574565b620001bd6200019f36600462000c99565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020016200014d565b6200011b62000602565b6200011b620001e936600462000cb7565b6200061f565b6200011b62000683565b6200011b6200020a36600462000d39565b620006f9565b6002546001600160a01b03166200013e565b6200011b6200023336600462000d39565b62000765565b6200011b6200024a36600462000d0c565b620007d1565b6200011b6200081e565b6200011b6200026b36600462000c99565b62000876565b6200011b6200028236600462000d0c565b620008cc565b620002926200092f565b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190620002c390309060040162000cf8565b602060405180830381865afa158015620002e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000307919062000d76565b90506200031f6001600160a01b03831633836200094a565b5050565b6200032d6200092f565b6001600160a01b0382166000908152602081905260409020548290620003589060ff166011620009a3565b6040516301e619cb60e51b815260ff831660048201526001600160a01b03841690633cc33960906024015b600060405180830381600087803b1580156200039e57600080fd5b505af1158015620003b3573d6000803e3d6000fd5b50505050505050565b600254600090620003da90600160a01b900460ff16156024620009a3565b6000604051620003ea9062000c6e565b604051809103906000f08015801562000407573d6000803e3d6000fd5b506001600160a01b038116600081815260208190526040808220805460ff1916600117905551929350909133917f8ccec77b0cb63ac2cafd0f5de8cdfadab91ce656d262240ba8a6343bccc5f94591a36040516329dcbe5f60e01b81526001600160a01b038216906329dcbe5f906200048590339060040162000cf8565b600060405180830381600087803b158015620004a057600080fd5b505af1158015620004b5573d6000803e3d6000fd5b5092949350505050565b620004c96200092f565b620005027f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff164210602d620009a3565b6002805460ff60a01b19169055565b6200051b6200092f565b6001600160a01b0382166000908152602081905260409020548290620005469060ff166011620009a3565b60405163acb21b3160e01b8152600481018390526001600160a01b0384169063acb21b319060240162000383565b6200057e6200092f565b6001600160a01b0381166000908152602081905260409020548190620005a99060ff166011620009a3565b816001600160a01b0316637104e93e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005e557600080fd5b505af1158015620005fa573d6000803e3d6000fd5b505050505050565b6002546200061d90600160a01b900460ff16156024620009a3565b565b620006296200092f565b6001600160a01b0382166000908152602081905260409020548290620006549060ff166011620009a3565b6040516222edd760e51b815260ff831660048201526001600160a01b0384169063045dbae09060240162000383565b6001546200069e906001600160a01b031633146014620009a3565b600280546001600160a01b0319808216339081179093556001805490911690556040516001600160a01b03909116919082907fb71aa4aa3670aacb42b0301b8a96f5358e0558282008c187078e90da32efa57390600090a350565b620007036200092f565b6001600160a01b03821660009081526020819052604090205482906200072e9060ff166011620009a3565b604051633c515d9960e01b815267ffffffffffffffff831660048201526001600160a01b03841690633c515d999060240162000383565b6200076f6200092f565b6001600160a01b03821660009081526020819052604090205482906200079a9060ff166011620009a3565b6040516314e38a1760e21b815267ffffffffffffffff831660048201526001600160a01b0384169063538e285c9060240162000383565b620007db6200092f565b6040516334e1990760e01b8152600481018290526001600160a01b038316906334e1990790602401600060405180830381600087803b158015620005e557600080fd5b620008286200092f565b620008617f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff164210602d620009a3565b6002805460ff60a01b1916600160a01b179055565b620008806200092f565b600180546001600160a01b0319166001600160a01b03831690811790915560405133907f5c1a93490d96bd82224bd015d0d93a0afbee6335c30aad9135cedc53d6be620c90600090a350565b620008d66200092f565b6001600160a01b0382166000908152602081905260409020548290620009019060ff166011620009a3565b60405163314d204f60e01b8152600481018390526001600160a01b0384169063314d204f9060240162000383565b6002546200061d906001600160a01b031633146022620009a3565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526200099e908490620009b4565b505050565b816200031f576200031f8162000a91565b600062000a0b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662000ada9092919063ffffffff16565b8051909150156200099e578080602001905181019062000a2c919062000d90565b6200099e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6030600a820601600a820491506030600a8306018060081b82016753574141502300000160c01b91505062461bcd60e51b60005260206004526008602452806044525060646000fd5b606062000aeb848460008562000af5565b90505b9392505050565b60608247101562000b585760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000a88565b6001600160a01b0385163b62000bb15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000a88565b600080866001600160a01b0316858760405162000bcf919062000de7565b60006040518083038185875af1925050503d806000811462000c0e576040519150601f19603f3d011682016040523d82523d6000602084013e62000c13565b606091505b509150915062000c2582828662000c30565b979650505050505050565b6060831562000c4157508162000aee565b82511562000c525782518084602001fd5b8160405162461bcd60e51b815260040162000a88919062000e05565b6150d78062000e3b83390190565b80356001600160a01b038116811462000c9457600080fd5b919050565b60006020828403121562000cac57600080fd5b62000aee8262000c7c565b6000806040838503121562000ccb57600080fd5b62000cd68362000c7c565b9150602083013560ff8116811462000ced57600080fd5b809150509250929050565b6001600160a01b0391909116815260200190565b6000806040838503121562000d2057600080fd5b62000d2b8362000c7c565b946020939093013593505050565b6000806040838503121562000d4d57600080fd5b62000d588362000c7c565b9150602083013567ffffffffffffffff8116811462000ced57600080fd5b60006020828403121562000d8957600080fd5b5051919050565b60006020828403121562000da357600080fd5b8151801515811462000aee57600080fd5b60005b8381101562000dd157818101518382015260200162000db7565b8381111562000de1576000848401525b50505050565b6000825162000dfb81846020870162000db4565b9190910192915050565b602081526000825180602084015262000e2681604085016020870162000db4565b601f01601f1916919091016040019291505056fe60a06040523480156200001157600080fd5b50600a8054600160501b600160f01b031916336a010000000000000000000081029190911790915560805262000053620f4240670de0b6b3a764000062000115565b6009556005805461ffff60201b19166504050000000017905562000081670de0b6b3a7640000600662000138565b600580546001600160401b0392909216660100000000000002600160301b600160701b0319909216919091178155620000c490670de0b6b3a76400009062000138565b600655610e10600755620000e26028670de0b6b3a764000062000115565b620000f690670de0b6b3a76400006200015a565b60085562000175565b634e487b7160e01b600052601160045260246000fd5b6000826200013357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615620001555762000155620000ff565b500290565b60008219821115620001705762000170620000ff565b500190565b608051614f15620001c260003960008181611205015281816119f501528181611b0d01528181611c4001528181612130015281816126a4015281816128ce015261328f0152614f156000f3fe608060405234801561001057600080fd5b50600436106102cc5760003560e01c806386d460621161017d578063b849a206116100d9578063d73dd62311610092578063d73dd623146106ae578063dd62ed3e146106c1578063ea45766b146106fa578063f2fde38b1461070d578063f8b2cb4f14610720578063fde924f714610733578063fe834dfd1461073b57600080fd5b8063b849a20614610647578063c09fa8b41461065a578063c34351711461066d578063d04ee53f14610680578063d0fffbdb14610693578063d4cadf68146106a657600080fd5b80639d4e7e3a116101365780639d4e7e3a146105cb578063a1f26854146105d3578063a9059cbb146105e6578063aa6ca808146105f9578063ab323b491461060e578063acb21b3114610621578063b02f0b731461063457600080fd5b806386d4606214610543578063895c253a146105565780638c28cbe81461057e5780638d4e408314610591578063948d8ce61461059957806395d89b41146105ac57600080fd5b80633c515d991161022c578063626f7291116101e5578063626f72911461046d578063661884631461048e5780636a9b7c88146104a157806370a08231146104c25780637104e93e146104eb57806379ba5097146104f3578063812d8628146104fb57600080fd5b80633c515d99146104065780633cc339601461041957806349b595521461042c5780634bb278f31461043f5780634f69c0d414610447578063538e285c1461045a57600080fd5b806329dcbe5f1161028957806329dcbe5f146103835780632f37b624146103965780633018205f146103a9578063313ce567146103be578063314d204f146103cd57806334e19907146103e05780633b4ea29d146103f357600080fd5b8063045dbae0146102d157806306fdde03146102e6578063095ea7b3146103245780631446a7ff1461034757806318160ddd1461036857806323b872dd14610370575b600080fd5b6102e46102df366004614447565b61075b565b005b60408051808201909152601081526f29bbb0b0b8102837b7b6102a37b5b2b760811b60208201525b60405161031b91906144bc565b60405180910390f35b6103376103323660046144e6565b6107aa565b604051901515815260200161031b565b61035a610355366004614510565b610805565b60405190815260200161031b565b60025461035a565b61033761037e366004614543565b610919565b6102e461039136600461457f565b6109f8565b6103376103a436600461457f565b610aa3565b6103b1610ada565b60405161031b919061459a565b6040516012815260200161031b565b6102e46103db3660046145ae565b610b05565b6102e46103ee3660046145ae565b610b4a565b61035a6104013660046144e6565b610bb1565b6102e46104143660046145c7565b610bd7565b6102e4610427366004614447565b610c1f565b6102e461043a3660046145fe565b610c7c565b6102e4610cdf565b6102e461045536600461461b565b610d8b565b6102e46104683660046145ae565b610f12565b61048061047b3660046144e6565b610f46565b60405161031b9291906146d4565b61033761049c3660046144e6565b6110d3565b6104b46104af3660046146ed565b6111a9565b60405161031b92919061473b565b61035a6104d036600461457f565b6001600160a01b031660009081526020819052604090205490565b6102e46111ef565b6102e4611242565b6105036112c9565b6040805160ff97881681529690951660208701526001600160401b03909316938501939093526060840152608083019190915260a082015260c00161031b565b6102e4610551366004614795565b61132f565b6105696105643660046146ed565b61147a565b6040805192835260208301919091520161031b565b6102e461058c36600461457f565b6115b2565b61033761167a565b61035a6105a736600461457f565b61169e565b60408051808201909152600381526214d41560ea1b602082015261030e565b6102e4611705565b61035a6105e13660046147e4565b61173c565b6103376105f43660046144e6565b611a31565b610601611a47565b60405161031b9190614817565b6102e461061c366004614795565b611abc565b6102e461062f3660046145ae565b611aef565b6102e461064236600461461b565b611bc0565b61035a6106553660046147e4565b611da0565b6104b46106683660046146ed565b611e75565b6102e461067b36600461457f565b611eac565b6103b161068e36600461457f565b612161565b6105696106a13660046146ed565b6121bb565b61035a6122ff565b6103376106bc3660046144e6565b61231a565b61035a6106cf366004614510565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61035a61070836600461457f565b61238e565b6102e461071b36600461457f565b6123e8565b61035a61072e36600461457f565b612451565b6103376124ab565b61074e6107493660046145ae565b6124ce565b60405161031b9190614864565b61076361260a565b61076b612646565b610773612667565b610785600160ff8316101560356126ed565b6005805465ff00000000001916600160281b60ff8416021790556107a76126ff565b50565b3360008181526001602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020614ec0833981519152906107f39086815260200190565b60405180910390a35060015b92915050565b6005546000906108199060ff1615826126ed565b6001600160a01b0383166000908152600460205260409020546108649060ff16801561085d57506001600160a01b03831660009081526004602052604090205460ff165b60026126ed565b600061086f8461270b565b9050600061087c8461270b565b825160208082015160409283015184519283015192840151935163a221ee4960e01b815294955073__Math__________________________________9463a221ee49946108cf9491600090600401614877565b602060405180830381865af41580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610910919061489a565b95945050505050565b6000336001600160a01b0385161480159061095957506001600160a01b038416600090815260016020908152604080832033845290915290205460001914155b156109e2576001600160a01b03841660009081526001602090815260408083203384529091529020546109908382101560156126ed565b6001600160a01b038581166000908152600160209081526040808320338085529083529281902087860390819055905190815292871692600080516020614ec0833981519152910160405180910390a3505b6109ed848484612810565b5060015b9392505050565b610a00612646565b600a54610a2090600160501b90046001600160a01b0316331460036126ed565b610a366001600160a01b0382161515600d6126ed565b600a8054600160501b600160f01b031916600160501b6001600160a01b03841690810291909117909155600b80546001600160a01b031916905560405133907fe9cdd2997ec8c6ef6ac8fa0a086751d7333153fd3c16c2d7ddd28a183bf5020b90600090a36107a76126ff565b600554600090610ab79060ff1615826126ed565b506001600160a01b03811660009081526004602052604090205460ff165b919050565b600554600090610aee9060ff1615826126ed565b50600a54600160501b90046001600160a01b031690565b610b0d61260a565b610b15612646565b610b1d612667565b610b3d610b33670de0b6b3a764000060016148c9565b82101560166126ed565b60068190556107a76126ff565b610b5261260a565b610b5a612646565b610b62612667565b610b84610b7a620f4240670de0b6b3a76400006148e8565b821015600e6126ed565b610ba4610b9a600a670de0b6b3a76400006148e8565b821115600f6126ed565b60098190556107a76126ff565b600554600090610bc59060ff1615826126ed565b610bcd6128cc565b6109f18383612939565b610bdf61260a565b610be7612646565b610bef612667565b600580546dffffffffffffffff0000000000001916600160301b6001600160401b038416021790556107a76126ff565b610c2761260a565b610c2f612646565b610c37612667565b610c49600160ff8316101560186126ed565b610c5b606460ff8316111560196126ed565b6005805464ff000000001916600160201b60ff8416021790556107a76126ff565b610c8461260a565b610c8c612646565b600554610ca49062010000900460ff161560046126ed565b600a54610cc490600160501b90046001600160a01b0316331460036126ed565b6005805461ff001916610100831515021790556107a76126ff565b610ce761260a565b610cef612646565b600554610d079062010000900460ff161560046126ed565b600a54610d2790600160501b90046001600160a01b0316331460036126ed565b600354610d39906002111560126126ed565b6005805462ffff00191662010100179055610d65610d60670de0b6b3a764000060646148c9565b612b26565b610d8133610d7c670de0b6b3a764000060646148c9565b612b2f565b610d896126ff565b565b610d9361260a565b610d9b612646565b610da36128cc565b600554610dba9062010000900460ff1660016126ed565b600354610dca90821460366126ed565b6000610dd884600254612b39565b9050610de781151560056126ed565b60005b82811015610ef057600060038281548110610e0757610e0761490a565b60009182526020808320909101546001600160a01b03168083526004909152604082206001015490925090610e3c8583612b7f565b9050610e4b81151560056126ed565b610e71878786818110610e6057610e6061490a565b9050602002013582111560086126ed565b610e7b8183614920565b6001600160a01b0384166000818152600460205260409081902060010192909255905133907f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a90610ecf9085815260200190565b60405180910390a3610ee2833383612bc3565b836001019350505050610dea565b50610efa84612b26565b610f043385612b2f565b50610f0d6126ff565b505050565b610f1a61260a565b610f22612646565b610f2a612667565b610f396001821015601a6126ed565b60078190556107a76126ff565b600554600090606090610f5d9060ff1615836126ed565b610f656128cc565b600554610f7c9062010000900460ff1660016126ed565b6001600160a01b038416600090815260046020526040902054610fa39060ff1660026126ed565b6001600160a01b038416600090815260046020526040812060010154610fca908590612cde565b600254909150610fda8282612b7f565b9350610fe68482612b39565b9150610ff582151560056126ed565b600354806001600160401b0381111561101057611010614938565b604051908082528060200260200182016040528015611039578160200160208202803683370190505b50935060005b818110156110c85760006003828154811061105c5761105c61490a565b60009182526020808320909101546001600160a01b031680835260049091526040909120600101549091506110918682612b7f565b98506110a089151560056126ed565b888784815181106110b3576110b361490a565b6020908102919091010152505060010161103f565b505050509250929050565b3360009081526001602090815260408083206001600160a01b038616845290915281205480831115611128573360009081526001602090815260408083206001600160a01b0388168452909152812055611157565b611132838261494e565b3360009081526001602090815260408083206001600160a01b03891684529091529020555b3360008181526001602090815260408083206001600160a01b03891680855290835292819020549051908152919291600080516020614ec0833981519152910160405180910390a35060019392505050565b6111b1614380565b6111b96143a1565b6005546111cb9060ff161560006126ed565b6111d36128cc565b6111e08787878787612d07565b915091505b9550959350505050565b6111f761260a565b61122d336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161460066126ed565b6005805463ff00000019166301000000179055565b600b5461125b906001600160a01b03163314602f6126ed565b600a8054600160501b600160f01b03198116600160501b3381810292909217909355600b80546001600160a01b0319169055604051929091046001600160a01b03169182907fe9cdd2997ec8c6ef6ac8fa0a086751d7333153fd3c16c2d7ddd28a183bf5020b90600090a350565b6000806000806000806112ed600560009054906101000a900460ff161560006126ed565b5050600554600654600754600854600160201b840460ff90811699600160281b86049091169850600160301b9094046001600160401b03169650919450925090565b6001600160a01b0384166000908152600460205260409020546113579060ff1615601c6126ed565b60035461136890600811601d6126ed565b6040805160a08101825260018082526003805460ff9081166020808601918252600086880181815260608801828152608089018381526001600160a01b038f1680855260049095529983209851895495519251915161ffff1990961690151561ff0019161761010092871692909202919091176cffffffffffffffffffffff000019166201000091909516026cffffffffffffffffffff00000019169390931763010000006001600160501b0390931692909202919091178555945193830193909355805491820181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191690911790556114748484848461300a565b50505050565b60008061148561260a565b61148d612646565b6114956128cc565b6000806114a58989898989612d07565b81516001600160a01b038c166000908152600460205260408120600101805494965092945090926114d7908490614920565b90915550506001600160a01b0387166000908152600460205260408120600101805488929061150790849061494e565b909155505081516020808401516040808601518582015160608088015184519788529587018d90529286019390935290840152608083015260a08201526001600160a01b0380891691908b169033907fbdafe88494b31fc7436fe7992b0f377e874287e841e62eed1ad77e84f3c5b1719060c00160405180910390a461159289338460000151612bc3565b61159d8733886133a1565b905160209091015190925090506111e56126ff565b6115ba61260a565b6115c2612646565b6001600160a01b0381166000908152600460205260409020546115e99060ff1660026126ed565b6040516370a0823160e01b81526001600160a01b038216906370a082319061161590309060040161459a565b602060405180830381865afa158015611632573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611656919061489a565b6001600160a01b0382166000908152600460205260409020600101556107a76126ff565b60055460009061168e9060ff1615826126ed565b5060055462010000900460ff1690565b6005546000906116b29060ff1615826126ed565b6001600160a01b0382166000908152600460205260409020546116d99060ff1660026126ed565b506001600160a01b0316600090815260046020526040902054630100000090046001600160501b031690565b61170d61260a565b600a5461172d90600160501b90046001600160a01b0316331460036126ed565b6005805463ff00000019169055565b600061174661260a565b61174e612646565b6117566128cc565b60055461176d9062010000900460ff1660016126ed565b6001600160a01b0384166000908152600460205260409020546117949060ff1660026126ed565b61179c6143c9565b60606117a7866133b5565b6040805160808101825288815260095460208201529294509092506000919081016103e86117de670de0b6b3a764000060036148c9565b6117e891906148e8565b81526002546020918201526040805180820182526005546001600160401b03600160301b820416825260065482850152825160808101845260ff600160201b830481168252600754958201959095524281850152600160281b90910490931660608401529051631adb96dd60e31b81529293509173__Math__________________________________9063d6dcb6e89061188e90889088908890889088906004016149eb565b602060405180830381865af41580156118ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cf919061489a565b6001600160a01b038a1660009081526004602052604090206001015490965061192390611919906119096003670de0b6b3a76400006148e8565b611914906001614920565b612b7f565b871115603a6126ed565b5050506119348484101560096126ed565b82826000015160200181815161194a919061494e565b90525061195782826134da565b81516020908101516001600160a01b0388166000908152600490925260408220600101556119858682612b7f565b9050866001600160a01b0316336001600160a01b03167fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed866040516119cc91815260200190565b60405180910390a36119de3387613623565b6119f06119eb828861494e565b61362d565b611a1a7f000000000000000000000000000000000000000000000000000000000000000082612b2f565b611a258733866133a1565b5050505b6109f16126ff565b6000611a3e338484612810565b50600192915050565b600554606090611a5c9060ff161560006126ed565b6003805480602002602001604051908101604052809291908181526020018280548015611ab257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a94575b5050505050905090565b6001600160a01b038416600090815260046020526040902054611ae39060ff1660026126ed565b6114748484848461300a565b611af761260a565b611aff612646565b611b35336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161460066126ed565b600554611b4e906301000000900460ff161560076126ed565b611b81611b65610320670de0b6b3a76400006148e8565b611b7790670de0b6b3a7640000614920565b82101560376126ed565b611bb3611b97600a670de0b6b3a76400006148e8565b611ba990670de0b6b3a7640000614920565b82111560386126ed565b60088190556107a76126ff565b611bc861260a565b611bd0612646565b600554611be79062010000900460ff1660016126ed565b600354611bf790821460366126ed565b6000611c04846000612b7f565b90506000611c12828661494e565b90506000611c2282600254612cde565b9050611c3181151560056126ed565b611c3b3387613623565b611c657f000000000000000000000000000000000000000000000000000000000000000084612b2f565b611c6e8261362d565b60005b84811015611d9457600060038281548110611c8e57611c8e61490a565b60009182526020808320909101546001600160a01b03168083526004909152604082206001015490925090611cc38583613636565b9050611cd281151560056126ed565b611cf8898986818110611ce757611ce761490a565b9050602002013582101560096126ed565b6001600160a01b038316600090815260046020526040902060010154611d1f90829061494e565b6001600160a01b0384166000818152600460205260409081902060010192909255905133907fe74c91552b64c2e2e7bd255639e004e693bd3e1d01cc33e65610b86afcc1ffed90611d739085815260200190565b60405180910390a3611d868333836133a1565b836001019350505050611c71565b50505050610f0d6126ff565b6000611daa61260a565b611db2612646565b611dba6128cc565b611dc48484612939565b9050611dd48282101560096126ed565b6001600160a01b038416600090815260046020526040902060010154611dfb908490614920565b6001600160a01b0385166000818152600460205260409081902060010192909255905133907f63982df10efd8dfaaaa0fcc7f50b2d93b7cba26ccc48adee2873220d485dc39a90611e4f9087815260200190565b60405180910390a3611e62843385612bc3565b611e6b81612b26565b611a293382612b2f565b611e7d614380565b611e856143a1565b600554611e979060ff161560006126ed565b611e9f6128cc565b6111e08787878787613657565b611eb461260a565b611ebc612646565b600a54611edc90600160501b90046001600160a01b0316331460036126ed565b6001600160a01b038116600090815260046020526040902054611f039060ff1660026126ed565b600554611f1b9062010000900460ff161560046126ed565b6001600160a01b03811660009081526004602052604081206001015490611f428282612b7f565b6001600160a01b038416600090815260046020526040902054600a54919250611f7e916001600160501b03630100000090920482169116614a8f565b600a80546001600160501b0319166001600160501b03929092169190911790556001600160a01b03831660009081526004602052604081205460035461010090910460ff169190611fd19060019061494e565b905060038181548110611fe657611fe661490a565b600091825260209091200154600380546001600160a01b039092169160ff85169081106120155761201561490a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816004600060038560ff168154811061205e5761205e61490a565b60009182526020808320909101546001600160a01b031683528201929092526040019020805460ff929092166101000261ff001990921691909117905560038054806120ac576120ac614ab7565b60008281526020808220830160001990810180546001600160a01b031990811690915593019093556001600160a01b038816815260048352604080822080546cffffffffffffffffffffffffff191681556001908101839055600c90945281208054909216825591015561212a8533612125868861494e565b6133a1565b612155857f0000000000000000000000000000000000000000000000000000000000000000856133a1565b505050506107a76126ff565b6005546000906121759060ff1615826126ed565b6001600160a01b03821660009081526004602052604090205461219c9060ff1660026126ed565b506001600160a01b039081166000908152600c60205260409020541690565b6000806121c661260a565b6121ce612646565b6121d66128cc565b6000806121e68989898989613657565b6001600160a01b038b16600090815260046020526040812060010180549395509193508a92612216908490614920565b909155505081516001600160a01b0388166000908152600460205260408120600101805490919061224890849061494e565b92505081905550866001600160a01b0316896001600160a01b0316336001600160a01b03167fbdafe88494b31fc7436fe7992b0f377e874287e841e62eed1ad77e84f3c5b1718b866000015187602001518860400151886040015189606001516040516122dd96959493929190958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405180910390a46122f089338a612bc3565b61159d873384600001516133a1565b6005546000906123139060ff1615826126ed565b5060095490565b3360009081526001602090815260408083206001600160a01b0386168452909152812054612349908390614920565b3360008181526001602090815260408083206001600160a01b03891680855290835292819020859055519384529092600080516020614ec083398151915291016107f3565b6005546000906123a29060ff1615826126ed565b6001600160a01b0382166000908152600460205260409020546123c99060ff1660026126ed565b506001600160a01b03166000908152600c602052604090206001015490565b6123f061260a565b600a5461241090600160501b90046001600160a01b0316331460036126ed565b60055462010000900460ff1661242f5760035461242f901560326126ed565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6005546000906124659060ff1615826126ed565b6001600160a01b03821660009081526004602052604090205461248c9060ff1660026126ed565b506001600160a01b031660009081526004602052604090206001015490565b6005546000906124bf9060ff1615826126ed565b50600554610100900460ff1690565b6005546060906124e39060ff161560006126ed565b6005546124fa9062010000900460ff1660016126ed565b6000612507836000612b7f565b90506000612515828561494e565b9050600061252582600254612cde565b600354909150806001600160401b0381111561254357612543614938565b60405190808252806020026020018201604052801561256c578160200160208202803683370190505b50945060005b818110156126005760006003828154811061258f5761258f61490a565b60009182526020808320909101546001600160a01b031680835260049091526040822060010154909250906125c48683613636565b90506125d381151560056126ed565b808985815181106125e6576125e661490a565b602002602001018181525050836001019350505050612572565b5050505050919050565b336001600160a01b03166000356001600160e01b0319166001600160e01b03191660003660405161263c929190614acd565b60405180910390a2565b6005546126589060ff161560006126ed565b6005805460ff19166001179055565b600a54600160501b90046001600160a01b031633141561269957600554610d899062010000900460ff161560046126ed565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156126e357600554610d89906301000000900460ff161560076126ed565b610d89600c6138f7565b816126fb576126fb816138f7565b5050565b6005805460ff19169055565b6127136143c9565b6001600160a01b038281166000818152600460209081526040808320815160a081018352815460ff8082161515835261010082048116838701526201000082041682850152630100000090046001600160501b031660608201526001918201546080820152948452600c8352818420825180840190935280549096168083529501549181019190915291926127a790613940565b905060006040518060600160405280856040015160ff168152602001856080015181526020016127f086606001516001600160501b031661191487602001518760400151613a13565b905260408051808201909152908152602081019290925250949350505050565b6128266001600160a01b038316151560236126ed565b6001600160a01b03831660009081526020819052604090205461284d8282101560136126ed565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290612884908490614920565b92505081905550826001600160a01b0316846001600160a01b0316600080516020614ea0833981519152846040516128be91815260200190565b60405180910390a350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c2dc4f06040518163ffffffff1660e01b815260040160006040518083038186803b15801561292557600080fd5b505afa158015611474573d6000803e3d6000fd5b6005546000906129539062010000900460ff1660016126ed565b6001600160a01b03831660009081526004602052604090205461297a9060ff1660026126ed565b6001600160a01b0383166000908152600460205260409020600101546129bb906129b1906119146002670de0b6b3a76400006148e8565b83111560396126ed565b6129c36143c9565b60606129ce856133b5565b6040805160808101825287815260095460208201529294509092506000919081016103e8612a05670de0b6b3a764000060036148c9565b612a0f91906148e8565b81526002546020918201526040805180820182526005546001600160401b03600160301b820416825260065482850152825160808101845260ff600160201b830481168252600754958201959095524281850152600160281b90910490931660608401529051632dbd333d60e01b81529293509173__Math__________________________________90632dbd333d90612ab590889088908890889088906004016149eb565b602060405180830381865af4158015612ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612af6919061489a565b9550868560000151602001818151612b0e9190614920565b905250612b1b8585613a1f565b505050505092915050565b6107a781613b71565b6126fb8282613bd7565b600080612b4e670de0b6b3a7640000856148c9565b90506000612b5d6002856148e8565b612b679083614920565b90506000612b7585836148e8565b9695505050505050565b600080612b8c83856148c9565b90506000612ba36002670de0b6b3a76400006148e8565b612bad9083614920565b90506000612b75670de0b6b3a7640000836148e8565b8281600081836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401612bf4919061459a565b602060405180830381865afa158015612c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c35919061489a565b612c3f9190614920565b9050612c566001600160a01b038716863087613be2565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190612c8590309060040161459a565b602060405180830381865afa158015612ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cc6919061489a565b9050612cd581831460346126ed565b50505050505050565b600080612cf3670de0b6b3a7640000856148c9565b9050612cff83826148e8565b949350505050565b612d0f614380565b612d176143a1565b6001600160a01b038716600090815260046020526040902054612d619060ff16801561085d57506001600160a01b03861660009081526004602052604090205460ff1660026126ed565b600554612d7790610100900460ff16600a6126ed565b6001600160a01b038516600090815260046020526040902060010154612db890612dae906119096003670de0b6b3a76400006148e8565b851115603a6126ed565b6000612dc38861270b565b90506000612dd08761270b565b825160208082015160409283015184519283015192840151600954945163a221ee4960e01b815295965073__Math__________________________________9563a221ee4995612e24959291600401614877565b602060405180830381865af4158015612e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e65919061489a565b808452612e7690861015600b6126ed565b612e8282828842613c4d565b9350612e96888560000151111560086126ed565b835182516020015173__Math__________________________________9163a221ee4991612ec49190614920565b845160400151845160200151612edb908b9061494e565b8560000151604001516009546040518663ffffffff1660e01b8152600401612f07959493929190614877565b602060405180830381865af4158015612f24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f48919061489a565b602084018190528351612f5e91101560056126ed565b6000612f6e846000015188612b7f565b612f79906001614920565b90508085600001511015612f8b578085525b612fe5600854612fdc612fb28760200151600954670de0b6b3a7640000611914919061494e565b6020808801516040908101518951519289015190910151885151612fd7939190613da5565b612b39565b1115602c6126ed565b5060209182015160409081015184820152910151015160608201529550959350505050565b61301261260a565b61301a612646565b6130226128cc565b600a5461304290600160501b90046001600160a01b0316331460036126ed565b60055461305a9062010000900460ff161560046126ed565b600b54613072906001600160a01b03161560336126ed565b613091670de0b6b3a76400006001600160501b0384161015601e6126ed565b6130c36130a7670de0b6b3a764000060326148c9565b6001600160501b0316836001600160501b03161115601f6126ed565b6130e76130dd64e8d4a51000670de0b6b3a76400006148e8565b84101560206126ed565b6001600160a01b0384166000908152600460205260409020546001600160501b0363010000009091048116908316811015613190576131268184614a8f565b600a5461313c91906001600160501b0316614afc565b600a80546001600160501b0319166001600160501b039290921691909117905561318b613172670de0b6b3a764000060326148c9565b600a546001600160501b039182169116111560216126ed565b6131ee565b806001600160501b0316836001600160501b031610156131ee57600a5483906131c39083906001600160501b0316614a8f565b6131cd9190614afc565b600a80546001600160501b0319166001600160501b03929092169190911790555b6001600160a01b038516600090815260046020526040902080546cffffffffffffffffffff000000191663010000006001600160501b038616021781556001018054908590558085111561325557613250863361324b848961494e565b612bc3565b6132b7565b808510156132b7576000613269868361494e565b90506000613278826000612b7f565b90506132898833612125848661494e565b6132b4887f0000000000000000000000000000000000000000000000000000000000000000836133a1565b50505b60008060006132c586613e3e565b9250925092506132d489613fac565b6132de9083614b27565b6001600160a01b038a81166000818152600460209081526040808320805462ff000019166201000060ff989098169790970296909617909555845180860186528b85168152808201898152848452600c90925291859020915182546001600160a01b031916941693909317815591516001929092019190915590517f367d74750f13eacb165ab505e06111727ad81829a67dd3fd6115c4d294ff1c039061338c908990879087908790614b4c565b60405180910390a250505050506114746126ff565b610f0d6001600160a01b0384168383614014565b6133bd6143c9565b60606133c88361270b565b6003549092506000906133dd9060019061494e565b9050806001600160401b038111156133f7576133f7614938565b60405190808252806020026020018201604052801561343057816020015b61341d6143c9565b8152602001906001900390816134155790505b5091506000805b828210156134d257856001600160a01b03166003828154811061345c5761345c61490a565b6000918252602090912001546001600160a01b0316146134ca576134a66003828154811061348c5761348c61490a565b6000918252602090912001546001600160a01b031661270b565b8483815181106134b8576134b861490a565b60200260200101819052508160010191505b600101613437565b505050915091565b6000805b82518110156114745773__Math__________________________________63a221ee498483815181106135135761351361490a565b602002602001015160000151602001518584815181106135355761353561490a565b6020026020010151600001516040015187600001516020015188600001516040015160006040518663ffffffff1660e01b8152600401613579959493929190614877565b602060405180830381865af4158015613596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135ba919061489a565b915061361b600854612fdc84612fd78786815181106135db576135db61490a565b602002602001015160200151604001518887815181106135fd576135fd61490a565b6020908102919091018101515151908b0151604001518b5151613da5565b6001016134de565b6126fb8282614044565b6107a78161404f565b60008061364383856148c9565b9050612cff670de0b6b3a7640000826148e8565b61365f614380565b6136676143a1565b6001600160a01b0387166000908152600460205260409020546136b19060ff16801561085d57506001600160a01b03861660009081526004602052604090205460ff1660026126ed565b6005546136c790610100900460ff16600a6126ed565b6001600160a01b038716600090815260046020526040902060010154613708906136fe906119146002670de0b6b3a76400006148e8565b87111560396126ed565b60006137138861270b565b905060006137208761270b565b825160208082015160409283015184519283015192840151600954945163a221ee4960e01b815295965073__Math__________________________________9563a221ee4995613774959291600401614877565b602060405180830381865af4158015613791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137b5919061489a565b8084526137c690861015600b6126ed565b6137d282828a426140ae565b93506137e6868560000151101560096126ed565b73__Math__________________________________63a221ee49898460000151602001516138149190614920565b845160400151875185516020015161382c919061494e565b8560000151604001516009546040518663ffffffff1660e01b8152600401613858959493929190614877565b602060405180830381865af4158015613875573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613899919061489a565b6020840181905283516138af91101560056126ed565b60006138bf898560000151612cde565b90508085600001511115612f8b57808552612fe5600854612fdc612fb28760200151600954670de0b6b3a7640000611914919061494e565b6030600a820601600a820491506030600a8306018060081b82016753574141502300000160c01b91505062461bcd60e51b60005260206004526008602452806044525060646000fd5b6139486143fe565b6000806000846001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561398b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139af9190614b7c565b50935050925092506139d1607882426139c8919061494e565b111560306126ed565b6139df6000831360106126ed565b604080516080810182526001600160a01b0390961686526001600160501b0390931660208601529184015260608301525090565b60006109f18284612b39565b6000805b82518110156114745773__Math__________________________________63a221ee49856000015160200151866000015160400151868581518110613a6a57613a6a61490a565b60200260200101516000015160200151878681518110613a8c57613a8c61490a565b6020026020010151600001516040015160006040518663ffffffff1660e01b8152600401613abe959493929190614877565b602060405180830381865af4158015613adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aff919061489a565b9150613b69600854612fdc84612fd7886020015160400151896000015160000151898881518110613b3257613b3261490a565b602002602001015160200151604001518a8981518110613b5457613b5461490a565b60200260200101516000015160000151613da5565b600101613a23565b30600090815260208190526040902054613b8c908290614920565b30600090815260208190526040902055600254613baa908290614920565b6002556040518181523090600090600080516020614ea0833981519152906020015b60405180910390a350565b6126fb308383612810565b6040516001600160a01b03808516602483015283166044820152606481018290526114749085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614195565b613c55614380565b60408051606081018252848152600954602082015260009181016103e8613c85670de0b6b3a764000060036148c9565b613c8f91906148e8565b90526040805180820182526005546001600160401b03600160301b8204168252600654602080840191909152835160808101855260ff600160201b840481168252600754828401528186018a9052600160281b90930490921660608301528a8101518401518b5151918b0151909401518a51519596509294919373__Math__________________________________9363b2a3e6d4938d938d93613d34939092613da5565b8787876040518763ffffffff1660e01b8152600401613d5896959493929190614bd4565b606060405180830381865af4158015613d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d999190614c37565b98975050505050505050565b60008160ff168460ff161115613df157613dea613de484670de0b6b3a7640000613dcf8689614c92565b613dda90600a614d99565b61191491906148c9565b86612b39565b9050612cff565b8160ff168460ff161015613e3457613dea613e0c8487612b39565b670de0b6b3a7640000613e1f8786614c92565b613e2a90600a614d99565b612fd791906148c9565b613dea8386612b39565b60008060606000849050600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015613e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ead9190614b7c565b50935050925050613ec5607882426139c8919061494e565b613ed36000831360106126ed565b81836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f369190614da8565b846001600160a01b0316637284e4166040518163ffffffff1660e01b8152600401600060405180830381865afa158015613f74573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613f9c9190810190614dc5565b9550955095505050509193909250565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015614008575060408051601f3d908101601f1916820190925261400591810190614da8565b60015b6107ff57506000919050565b6040516001600160a01b038316602482015260448101829052610f0d90849063a9059cbb60e01b90606401613c16565b6126fb823083612810565b3060009081526020819052604090205461406a90829061494e565b3060009081526020819052604090205560025461408890829061494e565b6002556040518181526000903090600080516020614ea083398151915290602001613bcc565b6140b6614380565b60408051606081018252848152600954602082015260009181016103e86140e6670de0b6b3a764000060036148c9565b6140f091906148e8565b90526040805180820182526005546001600160401b03600160301b8204168252600654602080840191909152835160808101855260ff600160201b840481168252600754828401528186018a9052600160281b90930490921660608301528a8101518401518b5151918b0151909401518a51519596509294919373__Math__________________________________9363f1913050938d938d93613d34939092613da5565b60006141ea826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661426c9092919063ffffffff16565b805190915015610f0d57808060200190518101906142089190614e66565b610f0d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6060612cff8484600085856001600160a01b0385163b6142ce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401614263565b600080866001600160a01b031685876040516142ea9190614e83565b60006040518083038185875af1925050503d8060008114614327576040519150601f19603f3d011682016040523d82523d6000602084013e61432c565b606091505b509150915061433c828286614347565b979650505050505050565b606083156143565750816109f1565b8251156143665782518084602001fd5b8160405162461bcd60e51b815260040161426391906144bc565b60405180606001604052806000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040805160a0810182526000918101828152606082018390526080820192909252908152602081016143f96143fe565b905290565b604051806080016040528060006001600160a01b0316815260200160006001600160501b0316815260200160008152602001600081525090565b60ff811681146107a757600080fd5b60006020828403121561445957600080fd5b81356109f181614438565b60005b8381101561447f578181015183820152602001614467565b838111156114745750506000910152565b600081518084526144a8816020860160208601614464565b601f01601f19169290920160200192915050565b6020815260006109f16020830184614490565b80356001600160a01b0381168114610ad557600080fd5b600080604083850312156144f957600080fd5b614502836144cf565b946020939093013593505050565b6000806040838503121561452357600080fd5b61452c836144cf565b915061453a602084016144cf565b90509250929050565b60008060006060848603121561455857600080fd5b614561846144cf565b925061456f602085016144cf565b9150604084013590509250925092565b60006020828403121561459157600080fd5b6109f1826144cf565b6001600160a01b0391909116815260200190565b6000602082840312156145c057600080fd5b5035919050565b6000602082840312156145d957600080fd5b81356001600160401b03811681146109f157600080fd5b80151581146107a757600080fd5b60006020828403121561461057600080fd5b81356109f1816145f0565b60008060006040848603121561463057600080fd5b8335925060208401356001600160401b038082111561464e57600080fd5b818601915086601f83011261466257600080fd5b81358181111561467157600080fd5b8760208260051b850101111561468657600080fd5b6020830194508093505050509250925092565b600081518084526020808501945080840160005b838110156146c9578151875295820195908201906001016146ad565b509495945050505050565b828152604060208201526000612cff6040830184614699565b600080600080600060a0868803121561470557600080fd5b61470e866144cf565b945060208601359350614723604087016144cf565b94979396509394606081013594506080013592915050565b825181526020808401518183015260408085015181840152835160608085019190915291840151608084015283015160a083015282015160c082015260e081016109f1565b6001600160501b03811681146107a757600080fd5b600080600080608085870312156147ab57600080fd5b6147b4856144cf565b93506020850135925060408501356147cb81614780565b91506147d9606086016144cf565b905092959194509250565b6000806000606084860312156147f957600080fd5b614802846144cf565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156148585783516001600160a01b031683529284019291840191600101614833565b50909695505050505050565b6020815260006109f16020830184614699565b948552602085019390935260408401919091526060830152608082015260a00190565b6000602082840312156148ac57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156148e3576148e36148b3565b500290565b60008261490557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60008219821115614933576149336148b3565b500190565b634e487b7160e01b600052604160045260246000fd5b600082821015614960576149606148b3565b500390565b8051805160ff16835260208082015181850152604091820151828501529182015180516001600160a01b0316606080860191909152928101516001600160501b031660808501529081015160a0840152015160c090910152565b60ff8151168252602081015160208301526040810151604083015260ff60608201511660608301525050565b60006102408083016149fd848a614965565b60e084810192909252875190819052610260840191602091828a0160005b82811015614a3e57614a2e868351614965565b9483019490840190600101614a1b565b505088516101008701525050506020860151610120840152604086015161014084015260608601516101608401529050835161018083015260208401516101a0830152612b756101c08301846149bf565b60006001600160501b0383811690831681811015614aaf57614aaf6148b3565b039392505050565b634e487b7160e01b600052603160045260246000fd5b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60006001600160501b03808316818516808303821115614b1e57614b1e6148b3565b01949350505050565b600060ff821660ff84168060ff03821115614b4457614b446148b3565b019392505050565b60018060a01b038516815283602082015260ff83166040820152608060608201526000612b756080830184614490565b600080600080600060a08688031215614b9457600080fd5b8551614b9f81614780565b809550506020860151935060408601519250606086015191506080860151614bc681614780565b809150509295509295909350565b6103008101614be38289614965565b614bf060e0830188614965565b6101c0820186905284516101e0830152602085015161020083015260408501516102208301528351610240830152602084015161026083015261433c6102808301846149bf565b600060608284031215614c4957600080fd5b604051606081018181106001600160401b0382111715614c6b57614c6b614938565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600060ff821660ff841680821015614cac57614cac6148b3565b90039392505050565b600181815b80851115614cf0578160001904821115614cd657614cd66148b3565b80851615614ce357918102915b93841c9390800290614cba565b509250929050565b600082614d07575060016107ff565b81614d14575060006107ff565b8160018114614d2a5760028114614d3457614d50565b60019150506107ff565b60ff841115614d4557614d456148b3565b50506001821b6107ff565b5060208310610133831016604e8410600b8410161715614d73575081810a6107ff565b614d7d8383614cb5565b8060001904821115614d9157614d916148b3565b029392505050565b60006109f160ff841683614cf8565b600060208284031215614dba57600080fd5b81516109f181614438565b600060208284031215614dd757600080fd5b81516001600160401b0380821115614dee57600080fd5b818401915084601f830112614e0257600080fd5b815181811115614e1457614e14614938565b604051601f8201601f19908116603f01168101908382118183101715614e3c57614e3c614938565b81604052828152876020848701011115614e5557600080fd5b61433c836020830160208801614464565b600060208284031215614e7857600080fd5b81516109f1816145f0565b60008251614e95818460208701614464565b919091019291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a26469706673582212200500981b356ba740425f7cf6c845a7370658dabbfb717b848962643ac68617f664736f6c634300080c0033a2646970667358221220b42c5bf457ddc47f2923ebcb4aa0ce1ffa6cf474f5c51e8fdfdd54ddb9efdfe564736f6c634300080c0033",
  "immutableReferences": {
    "1468": [
      {
        "length": 32,
        "start": 1231
      },
      {
        "length": 32,
        "start": 2094
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:349:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "61:286:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "71:28:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "89:2:35",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "93:1:35",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "85:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "85:10:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "97:1:35",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "81:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "81:18:35"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "75:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "108:21:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "123:1:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "126:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "119:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "119:10:35"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "112:3:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "138:21:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "153:1:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "156:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "149:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "149:10:35"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "142:3:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "201:111:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "222:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "229:3:35",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "234:10:35",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "225:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "225:20:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "215:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "215:31:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "215:31:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:35",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "269:4:35",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "259:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "259:15:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "259:15:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "294:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "297:4:35",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "287:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "287:15:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "287:15:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "174:3:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "183:2:35"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "187:3:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "179:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "179:12:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "171:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "171:21:35"
                  },
                  "nodeType": "YulIf",
                  "src": "168:144:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "321:20:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "332:3:35"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "337:3:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:13:35"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "321:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "44:1:35",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "47:1:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "53:3:35",
                "type": ""
              }
            ],
            "src": "14:333:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function checked_add_t_uint64(x, y) -> sum\n    {\n        let _1 := sub(shl(64, 1), 1)\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x_1, y_1)\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5388:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:35"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:35",
                "type": ""
              }
            ],
            "src": "14:173:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:35",
                "type": ""
              }
            ],
            "src": "192:186:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "468:258:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "514:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "523:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "516:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "516:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "516:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "489:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "498:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "485:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "485:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "510:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "478:52:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "539:39:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "568:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "549:18:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:29:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "539:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "587:45:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "617:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "628:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "613:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "613:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "600:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:32:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "591:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "680:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "692:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "682:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "682:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "682:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "654:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "665:5:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "672:4:35",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "661:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "661:16:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "651:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:27:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "644:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:35:35"
                  },
                  "nodeType": "YulIf",
                  "src": "641:55:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "705:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "715:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "705:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "426:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "437:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "449:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "457:6:35",
                "type": ""
              }
            ],
            "src": "383:343:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "832:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "842:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "854:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "865:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "850:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "842:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "884:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "899:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "915:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "920:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "911:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "911:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "924:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "907:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "907:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "877:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "877:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "877:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "801:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "812:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "823:4:35",
                "type": ""
              }
            ],
            "src": "731:203:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1026:167:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1072:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1081:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1084:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1074:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1074:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1074:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1047:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1056:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1043:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1043:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1039:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1036:52:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1097:39:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1126:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1107:18:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1107:29:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1097:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1145:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1172:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1183:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1168:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1168:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1155:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1145:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "984:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "995:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1007:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1015:6:35",
                "type": ""
              }
            ],
            "src": "939:254:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1293:92:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1303:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1315:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1326:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1311:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1303:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1345:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1370:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1363:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1363:14:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1356:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1356:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1338:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1338:41:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1338:41:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1262:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1273:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1284:4:35",
                "type": ""
              }
            ],
            "src": "1198:187:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:272:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1522:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1531:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1534:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1524:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1524:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1524:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1497:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1506:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1493:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1493:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1518:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1489:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1486:52:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1547:39:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1576:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1557:18:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1557:29:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1547:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1595:45:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1625:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1636:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1621:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1621:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1608:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:32:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1599:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1702:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1711:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1714:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1704:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1704:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1704:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1662:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1673:5:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1680:18:35",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1669:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1669:30:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1659:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1659:41:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1652:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1652:49:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1649:69:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1727:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1737:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1727:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1434:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1445:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1457:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1465:6:35",
                "type": ""
              }
            ],
            "src": "1390:358:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1834:103:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1880:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1889:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1892:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1882:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1882:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1882:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1855:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1864:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1851:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1851:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1847:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1844:52:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1905:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1921:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1915:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1915:16:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1905:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1800:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1811:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1823:6:35",
                "type": ""
              }
            ],
            "src": "1753:184:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2039:87:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2049:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2061:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2072:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2057:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2049:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2091:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2106:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2114:4:35",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2102:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2102:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2084:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:36:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2084:36:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2008:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2019:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2030:4:35",
                "type": ""
              }
            ],
            "src": "1942:184:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2232:76:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2242:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2254:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2265:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2250:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2250:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2242:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2284:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2295:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2277:25:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2201:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2212:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2223:4:35",
                "type": ""
              }
            ],
            "src": "2131:177:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2412:101:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2422:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2434:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2445:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2430:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2430:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2422:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2464:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2479:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2487:18:35",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2475:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2475:31:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2457:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:50:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2457:50:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2381:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2392:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2403:4:35",
                "type": ""
              }
            ],
            "src": "2313:200:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2618:101:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2628:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2640:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2651:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2636:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2636:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2628:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2670:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2685:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2693:18:35",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2681:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2681:31:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2663:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2663:50:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2663:50:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2587:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2598:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2609:4:35",
                "type": ""
              }
            ],
            "src": "2518:201:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2853:145:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2863:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2875:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2886:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2871:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2871:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2863:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2905:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2920:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2936:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2941:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2932:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2932:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2945:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2928:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2928:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2916:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2916:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2898:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2898:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2898:51:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2969:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2980:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2965:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2965:18:35"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2985:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2958:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2958:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2958:34:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2814:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2825:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2833:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2844:4:35",
                "type": ""
              }
            ],
            "src": "2724:274:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3081:199:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3127:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3136:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3139:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3129:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3129:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3129:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3102:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3111:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3098:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3098:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3123:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3094:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3094:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3091:52:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3152:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3171:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3165:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:16:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3156:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3234:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3243:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3246:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3236:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3236:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3236:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3203:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3224:5:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3217:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3217:13:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3210:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3210:21:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3200:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3200:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3193:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3193:40:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3190:60:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3259:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3269:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3259:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3047:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3058:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3070:6:35",
                "type": ""
              }
            ],
            "src": "3003:277:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3459:232:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3476:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3487:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3469:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3469:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3510:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3521:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3506:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3506:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3526:2:35",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3499:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3499:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3499:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3549:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3560:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3545:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3545:18:35"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3565:34:35",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3538:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3538:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3538:62:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3620:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3631:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3616:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3616:18:35"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3636:12:35",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3609:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:40:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3609:40:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3658:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3670:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3681:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3666:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3666:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3658:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3436:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3450:4:35",
                "type": ""
              }
            ],
            "src": "3285:406:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3870:228:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3887:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3898:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3880:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3880:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3880:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3921:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3932:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3917:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3917:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3937:2:35",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3910:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3910:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3910:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3960:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3971:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3956:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3956:18:35"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3976:34:35",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3949:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3949:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3949:62:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4031:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4042:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4027:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4027:18:35"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4047:8:35",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4020:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4020:36:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4020:36:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4065:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4077:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4088:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4073:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4073:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4065:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3847:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3861:4:35",
                "type": ""
              }
            ],
            "src": "3696:402:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4277:179:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4294:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4305:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4287:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4287:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4287:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4328:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4339:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4324:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4324:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4344:2:35",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4317:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4317:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4317:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4367:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4378:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4363:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4363:18:35"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4383:31:35",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4356:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4356:59:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4356:59:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4424:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4436:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4447:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4432:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4432:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4424:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4254:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4268:4:35",
                "type": ""
              }
            ],
            "src": "4103:353:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4514:205:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4524:10:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4533:1:35",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4528:1:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4593:63:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4618:3:35"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4623:1:35"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4614:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4614:11:35"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "4637:3:35"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4642:1:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4633:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4633:11:35"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4627:5:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4627:18:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4607:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4607:39:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4607:39:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4554:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4557:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4551:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4551:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4565:19:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4567:15:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4576:1:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4579:2:35",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4572:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4572:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4567:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4547:3:35",
                    "statements": []
                  },
                  "src": "4543:113:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4682:31:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4695:3:35"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4700:6:35"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4691:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4691:16:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4709:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4684:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4684:27:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4684:27:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4671:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4674:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4668:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4668:13:35"
                  },
                  "nodeType": "YulIf",
                  "src": "4665:48:35"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4492:3:35",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4497:3:35",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4502:6:35",
                "type": ""
              }
            ],
            "src": "4461:258:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4861:137:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4871:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4891:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4885:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4885:13:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4875:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4933:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4941:4:35",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4929:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4929:17:35"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4948:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4953:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4907:21:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4907:53:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4907:53:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4969:23:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4980:3:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4985:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4976:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4976:16:35"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4969:3:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4837:3:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4842:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4853:3:35",
                "type": ""
              }
            ],
            "src": "4724:274:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5124:262:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5141:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5152:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5134:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5134:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5134:21:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5164:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5184:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5178:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5178:13:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5168:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5211:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5222:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5207:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5207:18:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5227:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5200:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5200:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5200:34:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5269:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5277:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5265:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5265:15:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5286:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5297:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5282:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5282:18:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5302:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5243:21:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5243:66:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5243:66:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5318:62:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5334:9:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5353:6:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5361:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5349:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5349:15:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5370:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5366:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5366:7:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5345:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5345:29:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5330:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5330:45:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5377:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5326:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5326:54:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5318:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5093:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5104:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5115:4:35",
                "type": ""
              }
            ],
            "src": "5003:383:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "948:5704:7:-:0;;;1518:123;;;;;;;;;-1:-1:-1;1542:10:7;:23;;-1:-1:-1;;;;;;1542:23:7;1555:10;1542:23;;;1590:44;2694:10:5;1597:15:7;1590:44;:::i;:::-;-1:-1:-1;;;;;1575:59:7;;;948:5704;;14:333:35;53:3;-1:-1:-1;;;;;119:10:35;;;149;;;179:12;;;171:21;;168:144;;;234:10;229:3;225:20;222:1;215:31;269:4;266:1;259:15;297:4;294:1;287:15;168:144;328:13;;14:333;-1:-1:-1;;;;14:333:35:o;:::-;948:5704:7;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "948:5704:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3171:203;;;;;;:::i;:::-;;:::i;:::-;;5438:250;;;;;;:::i;:::-;;:::i;1716:319::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3872:173;;;:::i;6445:204::-;;;;;;:::i;:::-;;:::i;4392:156::-;;;;;;:::i;:::-;;:::i;2141:98::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2222:10:7;2195:4;2222:10;;;;;;;;;;;;;;2141:98;;;;1363:14:35;;1356:22;1338:41;;1326:2;1311:18;2141:98:7;1198:187:35;4211:98:7;;;:::i;6104:266::-;;;;;;:::i;:::-;;:::i;2790:297::-;;;:::i;4823:211::-;;;;;;:::i;:::-;;:::i;2302:102::-;2387:10;;-1:-1:-1;;;;;2387:10:7;2302:102;;5778:243;;;;;;:::i;:::-;;:::i;4606:140::-;;;;;;:::i;:::-;;:::i;3577:171::-;;;:::i;2520:172::-;;;;;;:::i;:::-;;:::i;5113:237::-;;;;;;:::i;:::-;;:::i;3171:203::-;1170:16;:14;:16::i;:::-;3270:38:::1;::::0;-1:-1:-1;;;3270:38:7;;3250:17:::1;::::0;-1:-1:-1;;;;;3270:23:7;::::1;::::0;::::1;::::0;:38:::1;::::0;3302:4:::1;::::0;3270:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3250:58:::0;-1:-1:-1;3318:49:7::1;-1:-1:-1::0;;;;;3318:26:7;::::1;3345:10;3250:58:::0;3318:26:::1;:49::i;:::-;3240:134;3171:203:::0;:::o;5438:250::-;1170:16;:14;:16::i;:::-;-1:-1:-1;;;;;1263:22:7;::::1;:7;:22:::0;;;::::1;::::0;;;;;;;5585:4;;1254:46:::1;::::0;1263:22:::1;;1685:2:6;1254:8:7;:46::i;:::-;5605:76:::2;::::0;-1:-1:-1;;;5605:76:7;;2114:4:35;2102:17;;5605:76:7::2;::::0;::::2;2084:36:35::0;-1:-1:-1;;;;;5605:44:7;::::2;::::0;::::2;::::0;2057:18:35;;5605:76:7::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1196:1:::1;5438:250:::0;;:::o;1716:319::-;1794:7;;1761;;1784:38;;-1:-1:-1;;;1794:7:7;;;;1793:8;2640:2:6;1784:8:7;:38::i;:::-;1832:9;1844:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1864:22:7;;:7;:22;;;;;;;;;;;:29;;-1:-1:-1;;1864:29:7;1889:4;1864:29;;;1908:39;1832:22;;-1:-1:-1;1864:22:7;;1921:10;;1908:39;;;1957:41;;-1:-1:-1;;;1957:41:7;;-1:-1:-1;;;;;1957:29:7;;;;;:41;;1987:10;;1957:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2023:4:7;;1716:319;-1:-1:-1;;;;1716:319:7:o;3872:173::-;1170:16;:14;:16::i;:::-;3946:67:::1;3973:12;3955:30;;:15;:30;3128:2:6;3946:8:7;:67::i;:::-;4023:7;:15:::0;;-1:-1:-1;;;;4023:15:7::1;::::0;;3872:173::o;6445:204::-;1170:16;:14;:16::i;:::-;-1:-1:-1;;;;;1263:22:7;::::1;:7;:22:::0;;;::::1;::::0;;;;;;;6570:4;;1254:46:::1;::::0;1263:22:::1;;1685:2:6;1254:8:7;:46::i;:::-;6590:52:::2;::::0;-1:-1:-1;;;6590:52:7;;::::2;::::0;::::2;2277:25:35::0;;;-1:-1:-1;;;;;6590:32:7;::::2;::::0;::::2;::::0;2250:18:35;;6590:52:7::2;2131:177:35::0;4392:156:7;1170:16;:14;:16::i;:::-;-1:-1:-1;;;;;1263:22:7;::::1;:7;:22:::0;;;::::1;::::0;;;;;;;4488:4;;1254:46:::1;::::0;1263:22:::1;;1685:2:6;1254:8:7;:46::i;:::-;4513:4:::2;-1:-1:-1::0;;;;;4508:31:7::2;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1196:1:::1;4392:156:::0;:::o;4211:98::-;4274:7;;4264:38;;-1:-1:-1;;;4274:7:7;;;;4273:8;2640:2:6;4264:8:7;:38::i;:::-;4211:98::o;6104:266::-;1170:16;:14;:16::i;:::-;-1:-1:-1;;;;;1263:22:7;::::1;:7;:22:::0;;;::::1;::::0;;;;;;;6259:4;;1254:46:::1;::::0;1263:22:::1;;1685:2:6;1254:8:7;:46::i;:::-;6279:84:::2;::::0;-1:-1:-1;;;6279:84:7;;2114:4:35;2102:17;;6279:84:7::2;::::0;::::2;2084:36:35::0;-1:-1:-1;;;;;6279:48:7;::::2;::::0;::::2;::::0;2057:18:35;;6279:84:7::2;1942:184:35::0;2790:297:7;2867:17;;2844:68;;-1:-1:-1;;;;;2867:17:7;2853:10;:31;1847:2:6;2844:8:7;:68::i;:::-;2942:10;;;-1:-1:-1;;;;;;2962:23:7;;;2975:10;2962:23;;;;;;2942:10;2995:30;;;;;;;3041:39;;-1:-1:-1;;;;;2942:10:7;;;;2975;2942;;3041:39;;2923:16;;3041:39;2834:253;2790:297::o;4823:211::-;1170:16;:14;:16::i;:::-;-1:-1:-1;;;;;1263:22:7;::::1;:7;:22:::0;;;::::1;::::0;;;;;;;4951:4;;1254:46:::1;::::0;1263:22:::1;;1685:2:6;1254:8:7;:46::i;:::-;4971:56:::2;::::0;-1:-1:-1;;;4971:56:7;;2487:18:35;2475:31;;4971:56:7::2;::::0;::::2;2457:50:35::0;-1:-1:-1;;;;;4971:34:7;::::2;::::0;::::2;::::0;2430:18:35;;4971:56:7::2;2313:200:35::0;5778:243:7;1170:16;:14;:16::i;:::-;-1:-1:-1;;;;;1263:22:7;::::1;:7;:22:::0;;;::::1;::::0;;;;;;;5922:4;;1254:46:::1;::::0;1263:22:::1;;1685:2:6;1254:8:7;:46::i;:::-;5942:72:::2;::::0;-1:-1:-1;;;5942:72:7;;2487:18:35;2475:31;;5942:72:7::2;::::0;::::2;2457:50:35::0;-1:-1:-1;;;;;5942:42:7;::::2;::::0;::::2;::::0;2430:18:35;;5942:72:7::2;2313:200:35::0;4606:140:7;1170:16;:14;:16::i;:::-;4709:30:::1;::::0;-1:-1:-1;;;4709:30:7;;::::1;::::0;::::1;2277:25:35::0;;;-1:-1:-1;;;;;4709:21:7;::::1;::::0;::::1;::::0;2250:18:35;;4709:30:7::1;;;;;;;;;;;;;;;;;::::0;::::1;3577:171:::0;1170:16;:14;:16::i;:::-;3650:67:::1;3677:12;3659:30;;:15;:30;3128:2:6;3650:8:7;:67::i;:::-;3727:7;:14:::0;;-1:-1:-1;;;;3727:14:7::1;-1:-1:-1::0;;;3727:14:7::1;::::0;;3577:171::o;2520:172::-;1170:16;:14;:16::i;:::-;2607:17:::1;:23:::0;;-1:-1:-1;;;;;;2607:23:7::1;-1:-1:-1::0;;;;;2607:23:7;::::1;::::0;;::::1;::::0;;;2646:39:::1;::::0;2669:10:::1;::::0;2646:39:::1;::::0;-1:-1:-1;;2646:39:7::1;2520:172:::0;:::o;5113:237::-;1170:16;:14;:16::i;:::-;-1:-1:-1;;;;;1263:22:7;::::1;:7;:22:::0;;;::::1;::::0;;;;;;;5255:4;;1254:46:::1;::::0;1263:22:::1;;1685:2:6;1254:8:7;:46::i;:::-;5275:68:::2;::::0;-1:-1:-1;;;5275:68:7;;::::2;::::0;::::2;2277:25:35::0;;;-1:-1:-1;;;;;5275:40:7;::::2;::::0;::::2;::::0;2250:18:35;;5275:68:7::2;2131:177:35::0;1018:109:7;1090:10;;1067:53;;-1:-1:-1;;;;;1090:10:7;1076;:24;2540:2:6;1067:8:7;:53::i;701:205:2:-;840:58;;;-1:-1:-1;;;;;2916:32:35;;840:58:2;;;2898:51:35;2965:18;;;;2958:34;;;840:58:2;;;;;;;;;;2871:18:35;;;;840:58:2;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;840:58:2;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3994:101:6:-;4063:9;4058:34;;4074:18;4082:9;4074:7;:18::i;3207:706:2:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;3487:2:35;3811:85:2;;;3469:21:35;3526:2;3506:18;;;3499:30;3565:34;3545:18;;;3538:62;-1:-1:-1;;;3616:18:35;;;3609:40;3666:19;;3811:85:2;;;;;;;;4202:3072:6;5346:4;5341:2;5330:9;5326:18;5322:29;5389:2;5378:9;5374:18;5361:31;;5439:4;5434:2;5423:9;5419:18;5415:29;6083:6;6080:1;6076:14;6069:5;6065:26;6045:18;6041:51;6036:3;6032:61;6012:81;;;-1:-1:-1;;;6612:3:6;6605:79;6824:66;6818:4;6811:80;6967:1;6961:4;6954:15;7041:12;7035:4;7028:26;;7262:3;7259:1;7252:14;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;3898:2:35;5137:81:3;;;3880:21:35;3937:2;3917:18;;;3910:30;3976:34;3956:18;;;3949:62;-1:-1:-1;;;4027:18:35;;;4020:36;4073:19;;5137:81:3;3696:402:35;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;4305:2:35;5228:60:3;;;4287:21:35;4344:2;4324:18;;;4317:30;4383:31;4363:18;;;4356:59;4432:18;;5228:60:3;4103:353:35;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:173:35:-;82:20;;-1:-1:-1;;;;;131:31:35;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:343::-;449:6;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;549:29;568:9;549:29;:::i;:::-;539:39;;628:2;617:9;613:18;600:32;672:4;665:5;661:16;654:5;651:27;641:55;;692:1;689;682:12;641:55;715:5;705:15;;;383:343;;;;;:::o;731:203::-;-1:-1:-1;;;;;895:32:35;;;;877:51;;865:2;850:18;;731:203::o;939:254::-;1007:6;1015;1068:2;1056:9;1047:7;1043:23;1039:32;1036:52;;;1084:1;1081;1074:12;1036:52;1107:29;1126:9;1107:29;:::i;:::-;1097:39;1183:2;1168:18;;;;1155:32;;-1:-1:-1;;;939:254:35:o;1390:358::-;1457:6;1465;1518:2;1506:9;1497:7;1493:23;1489:32;1486:52;;;1534:1;1531;1524:12;1486:52;1557:29;1576:9;1557:29;:::i;:::-;1547:39;;1636:2;1625:9;1621:18;1608:32;1680:18;1673:5;1669:30;1662:5;1659:41;1649:69;;1714:1;1711;1704:12;1753:184;1823:6;1876:2;1864:9;1855:7;1851:23;1847:32;1844:52;;;1892:1;1889;1882:12;1844:52;-1:-1:-1;1915:16:35;;1753:184;-1:-1:-1;1753:184:35:o;3003:277::-;3070:6;3123:2;3111:9;3102:7;3098:23;3094:32;3091:52;;;3139:1;3136;3129:12;3091:52;3171:9;3165:16;3224:5;3217:13;3210:21;3203:5;3200:32;3190:60;;3246:1;3243;3236:12;4461:258;4533:1;4543:113;4557:6;4554:1;4551:13;4543:113;;;4633:11;;;4627:18;4614:11;;;4607:39;4579:2;4572:10;4543:113;;;4674:6;4671:1;4668:13;4665:48;;;4709:1;4700:6;4695:3;4691:16;4684:27;4665:48;;4461:258;;;:::o;4724:274::-;4853:3;4891:6;4885:13;4907:53;4953:6;4948:3;4941:4;4933:6;4929:17;4907:53;:::i;:::-;4976:16;;;;;4724:274;-1:-1:-1;;4724:274:35:o;5003:383::-;5152:2;5141:9;5134:21;5115:4;5184:6;5178:13;5227:6;5222:2;5211:9;5207:18;5200:34;5243:66;5302:6;5297:2;5286:9;5282:18;5277:2;5269:6;5265:15;5243:66;:::i;:::-;5370:2;5349:15;-1:-1:-1;;5345:29:35;5330:45;;;;5377:2;5326:54;;5003:383;-1:-1:-1;;5003:383:35:o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Affero General Public License for more details.\n\n// You should have received a copy of the GNU Affero General Public License\n// along with this program. If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity =0.8.12;\n\n// Builds new Pools, logging their addresses and providing `isPool(address) -> (bool)`\n\nimport \"./Pool.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./interfaces/IFactory.sol\";\nimport \"./Errors.sol\";\n\ncontract Factory is IFactory {\n\n    using SafeERC20 for IERC20; \n\n    function _onlySwaapLabs() private view {\n        _require(msg.sender == _swaaplabs, Err.NOT_SWAAPLABS);\n    }\n\n    modifier _onlySwaapLabs_() {\n        _onlySwaapLabs();\n        _;\n    }\n\n    modifier _onlyPool_(address pool) {\n        _require(_isPool[address(pool)], Err.NOT_POOL);\n        _;\n    }\n    \n    mapping(address=>bool) private _isPool;\n    \n    address private _pendingSwaaplabs;\n    address private _swaaplabs;\n    bool private _paused;\n    uint64 immutable private _pauseWindow;\n\n    constructor() {\n        _swaaplabs = msg.sender;\n        _pauseWindow = uint64(block.timestamp) + Const.PAUSE_WINDOW;\n    }\n\n    /**\n    * @notice Create new pool with default parameters\n    */\n    function newPool()\n    external\n    returns (address)\n    {\n        _require(!_paused, Err.PAUSED_FACTORY);\n        Pool pool = new Pool();\n        _isPool[address(pool)] = true;\n        emit LOG_NEW_POOL(msg.sender, address(pool));\n        pool.setControllerAndTransfer(msg.sender);\n        return address(pool);\n    }\n    \n    /**\n    * @notice Returns if an address corresponds to a pool created by the factory\n    */\n    function isPool(address b)\n    external view returns (bool)\n    {\n        return _isPool[b];\n    }\n\n    /**\n    * @notice Returns swaap labs' address\n    */\n    function getSwaapLabs()\n    external view\n    returns (address)\n    {\n        return _swaaplabs;\n    }\n\n    /**\n    * @notice Allows an owner to begin transferring ownership to a new address,\n    * pending.\n    */\n    function transferOwnership(address _to)\n    external\n    _onlySwaapLabs_\n    {\n        _pendingSwaaplabs = _to;\n\n        emit LOG_TRANSFER_REQUESTED(msg.sender, _to);\n    }\n\n    /**\n    * @notice Allows an ownership transfer to be completed by the recipient.\n    */\n    function acceptOwnership()\n    external\n    {\n        _require(msg.sender == _pendingSwaaplabs, Err.NOT_PENDING_SWAAPLABS);\n\n        address oldOwner = _swaaplabs;\n        _swaaplabs = msg.sender;\n        _pendingSwaaplabs = address(0);\n\n        emit LOG_NEW_SWAAPLABS(oldOwner, msg.sender);\n    }\n   \n    /**\n    * @notice Sends the exit fees accumulated to swaap labs\n    */\n    function collect(address erc20)\n    external\n    _onlySwaapLabs_\n    {\n        uint256 collected = IERC20(erc20).balanceOf(address(this));\n        IERC20(erc20).safeTransfer(msg.sender, collected);\n    }\n    \n    /**\n    * @notice Pause the factory's pools\n    * @dev Pause disables most of the pools functionalities (swap, joinPool & joinswap)\n    * and only allows LPs to withdraw their funds\n    */\n    function pauseProtocol() \n    external\n    _onlySwaapLabs_\n    {\n        _require(block.timestamp < _pauseWindow, Err.PAUSE_WINDOW_EXCEEDED);\n        _paused = true;\n    }\n\n    /**\n    * @notice Resume the factory's pools\n    * @dev Unpausing re-enables all the pools functionalities\n    */\n    function resumeProtocol()\n    external \n    _onlySwaapLabs_\n    {\n        _require(block.timestamp < _pauseWindow, Err.PAUSE_WINDOW_EXCEEDED);\n        _paused = false;\n    }\n\n    /**\n    * @notice Reverts pools if the factory is paused\n    * @dev This function is called by the pools whenever a swap or a joinPool is being made\n    */\n    function whenNotPaused()\n    external view {\n        _require(!_paused, Err.PAUSED_FACTORY);\n    }\n\n    /**\n    * @notice Revoke factory control over a pool's parameters\n    */\n    function revokePoolFactoryControl(address pool)\n    external\n    _onlySwaapLabs_\n    _onlyPool_(pool)\n    {\n        Pool(pool).revokeFactoryControl();\n    }\n\n    /**\n    * @notice Sets a pool's swap fee\n    */\n    function setPoolSwapFee(address pool, uint256 swapFee) \n    external\n    _onlySwaapLabs_\n    {\n        Pool(pool).setSwapFee(swapFee);\n    }\n    \n    /**\n    * @notice Sets a pool's dynamic coverage fees Z\n    */\n    function setPoolDynamicCoverageFeesZ(address pool, uint64 dynamicCoverageFeesZ)\n    external\n    _onlySwaapLabs_\n    _onlyPool_(pool)\n    {\n        Pool(pool).setDynamicCoverageFeesZ(dynamicCoverageFeesZ);\n    }\n\n    /**\n    * @notice Sets a pool's dynamic coverage fees horizon\n    */\n    function setPoolDynamicCoverageFeesHorizon(address pool, uint256 dynamicCoverageFeesHorizon)\n    external \n    _onlySwaapLabs_\n    _onlyPool_(pool)\n    {\n        Pool(pool).setDynamicCoverageFeesHorizon(dynamicCoverageFeesHorizon);\n    }\n\n    /**\n    * @notice Sets a pool's price statistics lookback in round\n    */    \n    function setPoolPriceStatisticsLookbackInRound(address pool, uint8 priceStatisticsLookbackInRound)\n    external\n    _onlySwaapLabs_\n    _onlyPool_(pool)\n    {\n        Pool(pool).setPriceStatisticsLookbackInRound(priceStatisticsLookbackInRound);\n    }\n\n    /**\n    * @notice Sets a pool's price statistics lookback in seconds\n    */    \n    function setPoolPriceStatisticsLookbackInSec(address pool, uint64 priceStatisticsLookbackInSec)\n    external\n    _onlySwaapLabs_\n    _onlyPool_(pool)\n    {\n        Pool(pool).setPriceStatisticsLookbackInSec(priceStatisticsLookbackInSec);\n    }\n\n    /**\n    * @notice Sets a pool's statistics lookback step in round\n    */\n    function setPoolPriceStatisticsLookbackStepInRound(address pool, uint8 priceStatisticsLookbackStepInRound)\n    external\n    _onlySwaapLabs_\n    _onlyPool_(pool)\n    {\n        Pool(pool).setPriceStatisticsLookbackStepInRound(priceStatisticsLookbackStepInRound);\n    }\n\n    /**\n    * @notice Sets a pool's maximum price unpeg ratio\n    */\n    function setPoolMaxPriceUnpegRatio(address pool, uint256 maxPriceUnpegRatio)\n    external\n    _onlySwaapLabs_\n    _onlyPool_(pool)\n    {\n        Pool(pool).setMaxPriceUnpegRatio(maxPriceUnpegRatio);\n    }\n\n}",
  "sourcePath": "/Users/davidbouba/dev/swaap-labs/RV-swaap-core-v1/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Address": [
        642
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ChainlinkUtils": [
        1028
      ],
      "Const": [
        1208
      ],
      "Err": [
        1383
      ],
      "Factory": [
        1862
      ],
      "GeometricBrownianMotionOracle": [
        3052
      ],
      "IDecimals": [
        11317
      ],
      "IERC20": [
        123
      ],
      "IFactory": [
        11451
      ],
      "IPool": [
        11473
      ],
      "IPoolControl": [
        11583
      ],
      "IPoolEvents": [
        11655
      ],
      "IPoolLP": [
        11733
      ],
      "IPoolState": [
        11840
      ],
      "IPoolSwap": [
        11921
      ],
      "IPoolToken": [
        11966
      ],
      "LogExpMath": [
        4350
      ],
      "Math": [
        6483
      ],
      "Num": [
        7057
      ],
      "Pool": [
        10825
      ],
      "PoolToken": [
        11309
      ],
      "SafeERC20": [
        347
      ],
      "Struct": [
        12059
      ],
      "_require": [
        1399
      ],
      "_revert": [
        1407
      ]
    },
    "id": 1863,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1409,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "687:24:7"
      },
      {
        "absolutePath": "project:/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 1410,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1863,
        "sourceUnit": 10826,
        "src": "801:20:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1411,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1863,
        "sourceUnit": 348,
        "src": "822:65:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IFactory.sol",
        "file": "./interfaces/IFactory.sol",
        "id": 1412,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1863,
        "sourceUnit": 11452,
        "src": "888:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Errors.sol",
        "file": "./Errors.sol",
        "id": 1413,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1863,
        "sourceUnit": 1408,
        "src": "924:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1414,
              "name": "IFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11451,
              "src": "968:8:7"
            },
            "id": 1415,
            "nodeType": "InheritanceSpecifier",
            "src": "968:8:7"
          }
        ],
        "canonicalName": "Factory",
        "contractDependencies": [
          10825
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1862,
        "linearizedBaseContracts": [
          1862,
          11451
        ],
        "name": "Factory",
        "nameLocation": "957:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1419,
            "libraryName": {
              "id": 1416,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 347,
              "src": "990:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "984:27:7",
            "typeName": {
              "id": 1418,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1417,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 123,
                "src": "1004:6:7"
              },
              "referencedDeclaration": 123,
              "src": "1004:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$123",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "1057:70:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1423,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1076:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1076:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1425,
                          "name": "_swaaplabs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1464,
                          "src": "1090:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1076:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1427,
                          "name": "Err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "1102:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Err_$1383_$",
                            "typeString": "type(library Err)"
                          }
                        },
                        "id": 1428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NOT_SWAAPLABS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1313,
                        "src": "1102:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1422,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "1067:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1067:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:53:7"
                }
              ]
            },
            "id": 1432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlySwaapLabs",
            "nameLocation": "1027:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:2:7"
            },
            "returnParameters": {
              "id": 1421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:7"
            },
            "scope": 1862,
            "src": "1018:109:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1438,
              "nodeType": "Block",
              "src": "1160:44:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1434,
                      "name": "_onlySwaapLabs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1432,
                      "src": "1170:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 1435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1436,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:16:7"
                },
                {
                  "id": 1437,
                  "nodeType": "PlaceholderStatement",
                  "src": "1196:1:7"
                }
              ]
            },
            "id": 1439,
            "name": "_onlySwaapLabs_",
            "nameLocation": "1142:15:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1157:2:7"
            },
            "src": "1133:71:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1455,
              "nodeType": "Block",
              "src": "1244:74:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1444,
                          "name": "_isPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1460,
                          "src": "1263:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1449,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 1447,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1441,
                              "src": "1279:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1271:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1445,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1271:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1271:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1263:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1450,
                          "name": "Err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "1287:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Err_$1383_$",
                            "typeString": "type(library Err)"
                          }
                        },
                        "id": 1451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NOT_POOL",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1265,
                        "src": "1287:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1443,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "1254:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 1452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1453,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:46:7"
                },
                {
                  "id": 1454,
                  "nodeType": "PlaceholderStatement",
                  "src": "1310:1:7"
                }
              ]
            },
            "id": 1456,
            "name": "_onlyPool_",
            "nameLocation": "1219:10:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "1238:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "1230:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1229:14:7"
            },
            "src": "1210:108:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1460,
            "mutability": "mutable",
            "name": "_isPool",
            "nameLocation": "1359:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1862,
            "src": "1328:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1459,
              "keyType": {
                "id": 1457,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1336:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1328:22:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1458,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1345:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1462,
            "mutability": "mutable",
            "name": "_pendingSwaaplabs",
            "nameLocation": "1393:17:7",
            "nodeType": "VariableDeclaration",
            "scope": 1862,
            "src": "1377:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1461,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1377:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1464,
            "mutability": "mutable",
            "name": "_swaaplabs",
            "nameLocation": "1432:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1862,
            "src": "1416:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1463,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1416:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1466,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "1461:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1862,
            "src": "1448:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1465,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1448:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1468,
            "mutability": "immutable",
            "name": "_pauseWindow",
            "nameLocation": "1499:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1862,
            "src": "1474:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 1467,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1474:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1487,
              "nodeType": "Block",
              "src": "1532:109:7",
              "statements": [
                {
                  "expression": {
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1471,
                      "name": "_swaaplabs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "1542:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1472,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1555:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1555:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1542:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1475,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:23:7"
                },
                {
                  "expression": {
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1476,
                      "name": "_pauseWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1468,
                      "src": "1575:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 1484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1479,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "1597:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1597:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1590:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 1477,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "1590:6:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1590:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1482,
                          "name": "Const",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "1616:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Const_$1208_$",
                            "typeString": "type(library Const)"
                          }
                        },
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PAUSE_WINDOW",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1189,
                        "src": "1616:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "1590:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1575:59:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1486,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:59:7"
                }
              ]
            },
            "id": 1488,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1529:2:7"
            },
            "returnParameters": {
              "id": 1470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1532:0:7"
            },
            "scope": 1862,
            "src": "1518:123:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11346
            ],
            "body": {
              "id": 1539,
              "nodeType": "Block",
              "src": "1774:261:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1793:8:7",
                        "subExpression": {
                          "id": 1495,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1466,
                          "src": "1794:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1497,
                          "name": "Err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "1803:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Err_$1383_$",
                            "typeString": "type(library Err)"
                          }
                        },
                        "id": 1498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PAUSED_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1319,
                        "src": "1803:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1494,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "1784:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1784:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:38:7"
                },
                {
                  "assignments": [
                    1503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1503,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1837:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1539,
                      "src": "1832:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$10825",
                        "typeString": "contract Pool"
                      },
                      "typeName": {
                        "id": 1502,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1501,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10825,
                          "src": "1832:4:7"
                        },
                        "referencedDeclaration": 10825,
                        "src": "1832:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1508,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1844:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Pool_$10825_$",
                        "typeString": "function () returns (contract Pool)"
                      },
                      "typeName": {
                        "id": 1505,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1504,
                          "name": "Pool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10825,
                          "src": "1848:4:7"
                        },
                        "referencedDeclaration": 10825,
                        "src": "1848:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$10825",
                      "typeString": "contract Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1832:22:7"
                },
                {
                  "expression": {
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1509,
                        "name": "_isPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "1864:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1514,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1512,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "1880:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$10825",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$10825",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1872:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1510,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1872:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1872:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1864:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1889:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1864:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1517,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:29:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1519,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1921:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1921:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1523,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "1941:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$10825",
                              "typeString": "contract Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pool_$10825",
                              "typeString": "contract Pool"
                            }
                          ],
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1933:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1521,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1933:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1933:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1518,
                      "name": "LOG_NEW_POOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11327,
                      "src": "1908:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1526,
                  "nodeType": "EmitStatement",
                  "src": "1903:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1987:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1987:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1527,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1503,
                        "src": "1957:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setControllerAndTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7550,
                      "src": "1957:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1533,
                  "nodeType": "ExpressionStatement",
                  "src": "1957:41:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1536,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1503,
                        "src": "2023:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      ],
                      "id": 1535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2015:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1534,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2015:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:13:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1493,
                  "id": 1538,
                  "nodeType": "Return",
                  "src": "2008:20:7"
                }
              ]
            },
            "documentation": {
              "id": 1489,
              "nodeType": "StructuredDocumentation",
              "src": "1647:64:7",
              "text": " @notice Create new pool with default parameters"
            },
            "functionSelector": "0f11779b",
            "id": 1540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newPool",
            "nameLocation": "1725:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:2:7"
            },
            "returnParameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "1761:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1760:9:7"
            },
            "scope": 1862,
            "src": "1716:319:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11354
            ],
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "2205:34:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1548,
                      "name": "_isPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1460,
                      "src": "2222:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1550,
                    "indexExpression": {
                      "id": 1549,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1543,
                      "src": "2230:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2222:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1547,
                  "id": 1551,
                  "nodeType": "Return",
                  "src": "2215:17:7"
                }
              ]
            },
            "documentation": {
              "id": 1541,
              "nodeType": "StructuredDocumentation",
              "src": "2045:91:7",
              "text": " @notice Returns if an address corresponds to a pool created by the factory"
            },
            "functionSelector": "5b16ebb7",
            "id": 1553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPool",
            "nameLocation": "2150:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1543,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "2165:1:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "2157:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2156:11:7"
            },
            "returnParameters": {
              "id": 1547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1546,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "2195:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1545,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:6:7"
            },
            "scope": 1862,
            "src": "2141:98:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11360
            ],
            "body": {
              "id": 1561,
              "nodeType": "Block",
              "src": "2370:34:7",
              "statements": [
                {
                  "expression": {
                    "id": 1559,
                    "name": "_swaaplabs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1464,
                    "src": "2387:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1558,
                  "id": 1560,
                  "nodeType": "Return",
                  "src": "2380:17:7"
                }
              ]
            },
            "documentation": {
              "id": 1554,
              "nodeType": "StructuredDocumentation",
              "src": "2245:52:7",
              "text": " @notice Returns swaap labs' address"
            },
            "functionSelector": "af1224f0",
            "id": 1562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwaapLabs",
            "nameLocation": "2311:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:2:7"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "2357:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2356:9:7"
            },
            "scope": 1862,
            "src": "2302:102:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11366
            ],
            "body": {
              "id": 1580,
              "nodeType": "Block",
              "src": "2597:95:7",
              "statements": [
                {
                  "expression": {
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1570,
                      "name": "_pendingSwaaplabs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1462,
                      "src": "2607:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1571,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1565,
                      "src": "2627:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2607:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:23:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1575,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2669:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2669:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1577,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1565,
                        "src": "2681:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1574,
                      "name": "LOG_TRANSFER_REQUESTED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11334,
                      "src": "2646:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1579,
                  "nodeType": "EmitStatement",
                  "src": "2641:44:7"
                }
              ]
            },
            "documentation": {
              "id": 1563,
              "nodeType": "StructuredDocumentation",
              "src": "2410:105:7",
              "text": " @notice Allows an owner to begin transferring ownership to a new address,\n pending."
            },
            "functionSelector": "f2fde38b",
            "id": 1581,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1568,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1567,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "2577:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2577:15:7"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "2529:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2555:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "2547:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2546:13:7"
            },
            "returnParameters": {
              "id": 1569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:0:7"
            },
            "scope": 1862,
            "src": "2520:172:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11370
            ],
            "body": {
              "id": 1616,
              "nodeType": "Block",
              "src": "2834:253:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1586,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2853:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2853:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1588,
                          "name": "_pendingSwaaplabs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1462,
                          "src": "2867:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2853:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1590,
                          "name": "Err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "2886:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Err_$1383_$",
                            "typeString": "type(library Err)"
                          }
                        },
                        "id": 1591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NOT_PENDING_SWAAPLABS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1274,
                        "src": "2886:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1585,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "2844:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2844:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:68:7"
                },
                {
                  "assignments": [
                    1595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1595,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nameLocation": "2931:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1616,
                      "src": "2923:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1594,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2923:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1597,
                  "initialValue": {
                    "id": 1596,
                    "name": "_swaaplabs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1464,
                    "src": "2942:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2923:29:7"
                },
                {
                  "expression": {
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1598,
                      "name": "_swaaplabs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "2962:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1599,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2975:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2975:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2962:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1602,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:23:7"
                },
                {
                  "expression": {
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1603,
                      "name": "_pendingSwaaplabs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1462,
                      "src": "2995:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3023:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3015:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3015:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3015:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2995:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1609,
                  "nodeType": "ExpressionStatement",
                  "src": "2995:30:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1611,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "3059:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1612,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3069:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3069:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1610,
                      "name": "LOG_NEW_SWAAPLABS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11341,
                      "src": "3041:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3041:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1615,
                  "nodeType": "EmitStatement",
                  "src": "3036:44:7"
                }
              ]
            },
            "documentation": {
              "id": 1582,
              "nodeType": "StructuredDocumentation",
              "src": "2698:87:7",
              "text": " @notice Allows an ownership transfer to be completed by the recipient."
            },
            "functionSelector": "79ba5097",
            "id": 1617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptOwnership",
            "nameLocation": "2799:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2814:2:7"
            },
            "returnParameters": {
              "id": 1584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2834:0:7"
            },
            "scope": 1862,
            "src": "2790:297:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11376
            ],
            "body": {
              "id": 1646,
              "nodeType": "Block",
              "src": "3240:134:7",
              "statements": [
                {
                  "assignments": [
                    1626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1626,
                      "mutability": "mutable",
                      "name": "collected",
                      "nameLocation": "3258:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1646,
                      "src": "3250:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3250:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1636,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1633,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3302:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Factory_$1862",
                              "typeString": "contract Factory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Factory_$1862",
                              "typeString": "contract Factory"
                            }
                          ],
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3294:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1631,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3294:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3294:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1628,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1620,
                            "src": "3277:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1627,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "3270:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$123_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3270:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$123",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "3270:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3250:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1641,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3345:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3345:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1643,
                        "name": "collected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1626,
                        "src": "3357:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1638,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1620,
                            "src": "3325:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1637,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "3318:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$123_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3318:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$123",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 154,
                      "src": "3318:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$123_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$123_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3318:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1645,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:49:7"
                }
              ]
            },
            "documentation": {
              "id": 1618,
              "nodeType": "StructuredDocumentation",
              "src": "3096:70:7",
              "text": " @notice Sends the exit fees accumulated to swaap labs"
            },
            "functionSelector": "06ec16f8",
            "id": 1647,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1623,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1622,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "3220:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3220:15:7"
              }
            ],
            "name": "collect",
            "nameLocation": "3180:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "erc20",
                  "nameLocation": "3196:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "3188:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3188:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3187:15:7"
            },
            "returnParameters": {
              "id": 1624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:0:7"
            },
            "scope": 1862,
            "src": "3171:203:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11380
            ],
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "3640:108:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1654,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3659:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3659:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1656,
                          "name": "_pauseWindow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1468,
                          "src": "3677:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "3659:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1658,
                          "name": "Err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "3691:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Err_$1383_$",
                            "typeString": "type(library Err)"
                          }
                        },
                        "id": 1659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PAUSE_WINDOW_EXCEEDED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1346,
                        "src": "3691:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1653,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "3650:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 1660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3650:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1661,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:67:7"
                },
                {
                  "expression": {
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1662,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "3727:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3737:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3727:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1665,
                  "nodeType": "ExpressionStatement",
                  "src": "3727:14:7"
                }
              ]
            },
            "documentation": {
              "id": 1648,
              "nodeType": "StructuredDocumentation",
              "src": "3384:188:7",
              "text": " @notice Pause the factory's pools\n @dev Pause disables most of the pools functionalities (swap, joinPool & joinswap)\n and only allows LPs to withdraw their funds"
            },
            "functionSelector": "dbf62489",
            "id": 1667,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1650,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "3620:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3620:15:7"
              }
            ],
            "name": "pauseProtocol",
            "nameLocation": "3586:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3599:2:7"
            },
            "returnParameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:7"
            },
            "scope": 1862,
            "src": "3577:171:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11384
            ],
            "body": {
              "id": 1686,
              "nodeType": "Block",
              "src": "3936:109:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1674,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3955:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3955:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1676,
                          "name": "_pauseWindow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1468,
                          "src": "3973:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "3955:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1678,
                          "name": "Err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "3987:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Err_$1383_$",
                            "typeString": "type(library Err)"
                          }
                        },
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PAUSE_WINDOW_EXCEEDED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1346,
                        "src": "3987:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1673,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "3946:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 1680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1681,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:67:7"
                },
                {
                  "expression": {
                    "id": 1684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1682,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "4023:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4033:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4023:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1685,
                  "nodeType": "ExpressionStatement",
                  "src": "4023:15:7"
                }
              ]
            },
            "documentation": {
              "id": 1668,
              "nodeType": "StructuredDocumentation",
              "src": "3754:113:7",
              "text": " @notice Resume the factory's pools\n @dev Unpausing re-enables all the pools functionalities"
            },
            "functionSelector": "25c6bdfd",
            "id": 1687,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1670,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "3916:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3916:15:7"
              }
            ],
            "name": "resumeProtocol",
            "nameLocation": "3881:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3895:2:7"
            },
            "returnParameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3936:0:7"
            },
            "scope": 1862,
            "src": "3872:173:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11388
            ],
            "body": {
              "id": 1698,
              "nodeType": "Block",
              "src": "4254:55:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4273:8:7",
                        "subExpression": {
                          "id": 1692,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1466,
                          "src": "4274:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1694,
                          "name": "Err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "4283:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Err_$1383_$",
                            "typeString": "type(library Err)"
                          }
                        },
                        "id": 1695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PAUSED_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1319,
                        "src": "4283:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1691,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "4264:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4264:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1697,
                  "nodeType": "ExpressionStatement",
                  "src": "4264:38:7"
                }
              ]
            },
            "documentation": {
              "id": 1688,
              "nodeType": "StructuredDocumentation",
              "src": "4051:155:7",
              "text": " @notice Reverts pools if the factory is paused\n @dev This function is called by the pools whenever a swap or a joinPool is being made"
            },
            "functionSelector": "5c2dc4f0",
            "id": 1699,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whenNotPaused",
            "nameLocation": "4220:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4233:2:7"
            },
            "returnParameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4254:0:7"
            },
            "scope": 1862,
            "src": "4211:98:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11394
            ],
            "body": {
              "id": 1716,
              "nodeType": "Block",
              "src": "4498:50:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1711,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1702,
                            "src": "4513:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1710,
                          "name": "Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "4508:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pool_$10825_$",
                            "typeString": "type(contract Pool)"
                          }
                        },
                        "id": 1712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4508:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revokeFactoryControl",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7641,
                      "src": "4508:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4508:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1715,
                  "nodeType": "ExpressionStatement",
                  "src": "4508:33:7"
                }
              ]
            },
            "documentation": {
              "id": 1700,
              "nodeType": "StructuredDocumentation",
              "src": "4315:72:7",
              "text": " @notice Revoke factory control over a pool's parameters"
            },
            "functionSelector": "51089f16",
            "id": 1717,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1705,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1704,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "4457:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4457:15:7"
              },
              {
                "arguments": [
                  {
                    "id": 1707,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1702,
                    "src": "4488:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1708,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1706,
                  "name": "_onlyPool_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1456,
                  "src": "4477:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4477:16:7"
              }
            ],
            "name": "revokePoolFactoryControl",
            "nameLocation": "4401:24:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1702,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "4434:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1717,
                  "src": "4426:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4425:14:7"
            },
            "returnParameters": {
              "id": 1709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4498:0:7"
            },
            "scope": 1862,
            "src": "4392:156:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11402
            ],
            "body": {
              "id": 1734,
              "nodeType": "Block",
              "src": "4699:47:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1731,
                        "name": "swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1722,
                        "src": "4731:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1728,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "4714:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1727,
                          "name": "Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "4709:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pool_$10825_$",
                            "typeString": "type(contract Pool)"
                          }
                        },
                        "id": 1729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4709:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7504,
                      "src": "4709:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4709:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1733,
                  "nodeType": "ExpressionStatement",
                  "src": "4709:30:7"
                }
              ]
            },
            "documentation": {
              "id": 1718,
              "nodeType": "StructuredDocumentation",
              "src": "4554:47:7",
              "text": " @notice Sets a pool's swap fee"
            },
            "functionSelector": "d4122abd",
            "id": 1735,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1725,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1724,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "4679:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4679:15:7"
              }
            ],
            "name": "setPoolSwapFee",
            "nameLocation": "4615:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "4638:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1735,
                  "src": "4630:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4630:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "mutability": "mutable",
                  "name": "swapFee",
                  "nameLocation": "4652:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1735,
                  "src": "4644:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4644:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4629:31:7"
            },
            "returnParameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4699:0:7"
            },
            "scope": 1862,
            "src": "4606:140:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11410
            ],
            "body": {
              "id": 1755,
              "nodeType": "Block",
              "src": "4961:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1752,
                        "name": "dynamicCoverageFeesZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "5006:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1749,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "4976:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1748,
                          "name": "Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "4971:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pool_$10825_$",
                            "typeString": "type(contract Pool)"
                          }
                        },
                        "id": 1750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4971:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDynamicCoverageFeesZ",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8834,
                      "src": "4971:34:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4971:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1754,
                  "nodeType": "ExpressionStatement",
                  "src": "4971:56:7"
                }
              ]
            },
            "documentation": {
              "id": 1736,
              "nodeType": "StructuredDocumentation",
              "src": "4756:62:7",
              "text": " @notice Sets a pool's dynamic coverage fees Z"
            },
            "functionSelector": "a4452876",
            "id": 1756,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1743,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1742,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "4920:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4920:15:7"
              },
              {
                "arguments": [
                  {
                    "id": 1745,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1738,
                    "src": "4951:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1746,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1744,
                  "name": "_onlyPool_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1456,
                  "src": "4940:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4940:16:7"
              }
            ],
            "name": "setPoolDynamicCoverageFeesZ",
            "nameLocation": "4832:27:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1738,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "4868:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1756,
                  "src": "4860:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1740,
                  "mutability": "mutable",
                  "name": "dynamicCoverageFeesZ",
                  "nameLocation": "4881:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1756,
                  "src": "4874:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1739,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4874:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4859:43:7"
            },
            "returnParameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4961:0:7"
            },
            "scope": 1862,
            "src": "4823:211:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11418
            ],
            "body": {
              "id": 1776,
              "nodeType": "Block",
              "src": "5265:85:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1773,
                        "name": "dynamicCoverageFeesHorizon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1761,
                        "src": "5316:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1770,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1759,
                            "src": "5280:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1769,
                          "name": "Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "5275:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pool_$10825_$",
                            "typeString": "type(contract Pool)"
                          }
                        },
                        "id": 1771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5275:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDynamicCoverageFeesHorizon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8860,
                      "src": "5275:40:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5275:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1775,
                  "nodeType": "ExpressionStatement",
                  "src": "5275:68:7"
                }
              ]
            },
            "documentation": {
              "id": 1757,
              "nodeType": "StructuredDocumentation",
              "src": "5040:68:7",
              "text": " @notice Sets a pool's dynamic coverage fees horizon"
            },
            "functionSelector": "f7f16d72",
            "id": 1777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1764,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1763,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "5224:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5224:15:7"
              },
              {
                "arguments": [
                  {
                    "id": 1766,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1759,
                    "src": "5255:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1767,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1765,
                  "name": "_onlyPool_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1456,
                  "src": "5244:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5244:16:7"
              }
            ],
            "name": "setPoolDynamicCoverageFeesHorizon",
            "nameLocation": "5122:33:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1759,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "5164:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "5156:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5156:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1761,
                  "mutability": "mutable",
                  "name": "dynamicCoverageFeesHorizon",
                  "nameLocation": "5178:26:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1777,
                  "src": "5170:34:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5170:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5155:50:7"
            },
            "returnParameters": {
              "id": 1768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5265:0:7"
            },
            "scope": 1862,
            "src": "5113:237:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11426
            ],
            "body": {
              "id": 1797,
              "nodeType": "Block",
              "src": "5595:93:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1794,
                        "name": "priceStatisticsLookbackInRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1782,
                        "src": "5650:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1791,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1780,
                            "src": "5610:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1790,
                          "name": "Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "5605:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pool_$10825_$",
                            "typeString": "type(contract Pool)"
                          }
                        },
                        "id": 1792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5605:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPriceStatisticsLookbackInRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8895,
                      "src": "5605:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8) external"
                      }
                    },
                    "id": 1795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5605:76:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1796,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:76:7"
                }
              ]
            },
            "documentation": {
              "id": 1778,
              "nodeType": "StructuredDocumentation",
              "src": "5356:73:7",
              "text": " @notice Sets a pool's price statistics lookback in round"
            },
            "functionSelector": "0bb3fcf1",
            "id": 1798,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1785,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1784,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "5554:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5554:15:7"
              },
              {
                "arguments": [
                  {
                    "id": 1787,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1780,
                    "src": "5585:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1788,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1786,
                  "name": "_onlyPool_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1456,
                  "src": "5574:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5574:16:7"
              }
            ],
            "name": "setPoolPriceStatisticsLookbackInRound",
            "nameLocation": "5447:37:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1780,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "5493:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1798,
                  "src": "5485:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5485:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1782,
                  "mutability": "mutable",
                  "name": "priceStatisticsLookbackInRound",
                  "nameLocation": "5505:30:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1798,
                  "src": "5499:36:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1781,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5499:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5484:52:7"
            },
            "returnParameters": {
              "id": 1789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5595:0:7"
            },
            "scope": 1862,
            "src": "5438:250:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11434
            ],
            "body": {
              "id": 1818,
              "nodeType": "Block",
              "src": "5932:89:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1815,
                        "name": "priceStatisticsLookbackInSec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1803,
                        "src": "5985:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1812,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1801,
                            "src": "5947:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1811,
                          "name": "Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "5942:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pool_$10825_$",
                            "typeString": "type(contract Pool)"
                          }
                        },
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5942:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPriceStatisticsLookbackInSec",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8921,
                      "src": "5942:42:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5942:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1817,
                  "nodeType": "ExpressionStatement",
                  "src": "5942:72:7"
                }
              ]
            },
            "documentation": {
              "id": 1799,
              "nodeType": "StructuredDocumentation",
              "src": "5694:75:7",
              "text": " @notice Sets a pool's price statistics lookback in seconds"
            },
            "functionSelector": "bde9e322",
            "id": 1819,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1806,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1805,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "5891:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5891:15:7"
              },
              {
                "arguments": [
                  {
                    "id": 1808,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1801,
                    "src": "5922:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1809,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1807,
                  "name": "_onlyPool_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1456,
                  "src": "5911:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5911:16:7"
              }
            ],
            "name": "setPoolPriceStatisticsLookbackInSec",
            "nameLocation": "5787:35:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1801,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "5831:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1819,
                  "src": "5823:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5823:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1803,
                  "mutability": "mutable",
                  "name": "priceStatisticsLookbackInSec",
                  "nameLocation": "5844:28:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1819,
                  "src": "5837:35:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5837:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5822:51:7"
            },
            "returnParameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5932:0:7"
            },
            "scope": 1862,
            "src": "5778:243:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11442
            ],
            "body": {
              "id": 1839,
              "nodeType": "Block",
              "src": "6269:101:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1836,
                        "name": "priceStatisticsLookbackStepInRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1824,
                        "src": "6328:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1833,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1822,
                            "src": "6284:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1832,
                          "name": "Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "6279:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pool_$10825_$",
                            "typeString": "type(contract Pool)"
                          }
                        },
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6279:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPriceStatisticsLookbackStepInRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8947,
                      "src": "6279:48:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8) external"
                      }
                    },
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6279:84:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1838,
                  "nodeType": "ExpressionStatement",
                  "src": "6279:84:7"
                }
              ]
            },
            "documentation": {
              "id": 1820,
              "nodeType": "StructuredDocumentation",
              "src": "6027:72:7",
              "text": " @notice Sets a pool's statistics lookback step in round"
            },
            "functionSelector": "74d0e98a",
            "id": 1840,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1827,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1826,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "6228:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6228:15:7"
              },
              {
                "arguments": [
                  {
                    "id": 1829,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1822,
                    "src": "6259:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1830,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1828,
                  "name": "_onlyPool_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1456,
                  "src": "6248:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6248:16:7"
              }
            ],
            "name": "setPoolPriceStatisticsLookbackStepInRound",
            "nameLocation": "6113:41:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1822,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "6163:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1840,
                  "src": "6155:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6155:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "priceStatisticsLookbackStepInRound",
                  "nameLocation": "6175:34:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1840,
                  "src": "6169:40:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6169:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6154:56:7"
            },
            "returnParameters": {
              "id": 1831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6269:0:7"
            },
            "scope": 1862,
            "src": "6104:266:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11450
            ],
            "body": {
              "id": 1860,
              "nodeType": "Block",
              "src": "6580:69:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1857,
                        "name": "maxPriceUnpegRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1845,
                        "src": "6623:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1854,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "6595:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1853,
                          "name": "Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10825,
                          "src": "6590:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pool_$10825_$",
                            "typeString": "type(contract Pool)"
                          }
                        },
                        "id": 1855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6590:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$10825",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 1856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMaxPriceUnpegRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8996,
                      "src": "6590:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6590:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1859,
                  "nodeType": "ExpressionStatement",
                  "src": "6590:52:7"
                }
              ]
            },
            "documentation": {
              "id": 1841,
              "nodeType": "StructuredDocumentation",
              "src": "6376:64:7",
              "text": " @notice Sets a pool's maximum price unpeg ratio"
            },
            "functionSelector": "3bdb7010",
            "id": 1861,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1848,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1847,
                  "name": "_onlySwaapLabs_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1439,
                  "src": "6539:15:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6539:15:7"
              },
              {
                "arguments": [
                  {
                    "id": 1850,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1843,
                    "src": "6570:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1849,
                  "name": "_onlyPool_",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1456,
                  "src": "6559:10:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6559:16:7"
              }
            ],
            "name": "setPoolMaxPriceUnpegRatio",
            "nameLocation": "6454:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1843,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "6488:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "6480:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6480:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1845,
                  "mutability": "mutable",
                  "name": "maxPriceUnpegRatio",
                  "nameLocation": "6502:18:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "6494:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6494:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6479:42:7"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6580:0:7"
            },
            "scope": 1862,
            "src": "6445:204:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1863,
        "src": "948:5704:7",
        "usedErrors": []
      }
    ],
    "src": "687:5965:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0x8ccec77b0cb63ac2cafd0f5de8cdfadab91ce656d262240ba8a6343bccc5f945": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ],
          "name": "LOG_NEW_POOL",
          "type": "event"
        },
        "0xb71aa4aa3670aacb42b0301b8a96f5358e0558282008c187078e90da32efa573": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "LOG_NEW_SWAAPLABS",
          "type": "event"
        },
        "0x5c1a93490d96bd82224bd015d0d93a0afbee6335c30aad9135cedc53d6be620c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "LOG_TRANSFER_REQUESTED",
          "type": "event"
        }
      },
      "links": {
        "Math": "0x3F572c24D371C289578F76E5Bb8B74E3473828a8"
      },
      "address": "0xd682a62bd1dF757616e68319720295Ff7667A847",
      "transactionHash": "0x56ef39a7db3f3ba5f028c01afcaf9dc691eb2bb5cb6d163a596ea39cfe5ae3eb"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-13T15:16:18.197Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "pauseProtocol()": {
        "details": "Pause disables most of the pools functionalities (swap, joinPool & joinswap) and only allows LPs to withdraw their funds"
      },
      "resumeProtocol()": {
        "details": "Unpausing re-enables all the pools functionalities"
      },
      "whenNotPaused()": {
        "details": "This function is called by the pools whenever a swap or a joinPool is being made"
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "LOG_NEW_POOL(address,address)": {
        "notice": "Emitted when a controller creates a pool"
      },
      "LOG_NEW_SWAAPLABS(address,address)": {
        "notice": "Emitted when a new address accepts the Swaap labs role"
      },
      "LOG_TRANSFER_REQUESTED(address,address)": {
        "notice": "Emitted when a Swaap labs transfer is requested"
      }
    },
    "kind": "user",
    "methods": {
      "acceptOwnership()": {
        "notice": "Allows an ownership transfer to be completed by the recipient."
      },
      "collect(address)": {
        "notice": "Sends the exit fees accumulated to swaap labs"
      },
      "getSwaapLabs()": {
        "notice": "Returns swaap labs' address"
      },
      "isPool(address)": {
        "notice": "Returns if an address corresponds to a pool created by the factory"
      },
      "newPool()": {
        "notice": "Create new pool with default parameters"
      },
      "pauseProtocol()": {
        "notice": "Pause the factory's pools"
      },
      "resumeProtocol()": {
        "notice": "Resume the factory's pools"
      },
      "revokePoolFactoryControl(address)": {
        "notice": "Revoke factory control over a pool's parameters"
      },
      "setPoolDynamicCoverageFeesHorizon(address,uint256)": {
        "notice": "Sets a pool's dynamic coverage fees horizon"
      },
      "setPoolDynamicCoverageFeesZ(address,uint64)": {
        "notice": "Sets a pool's dynamic coverage fees Z"
      },
      "setPoolMaxPriceUnpegRatio(address,uint256)": {
        "notice": "Sets a pool's maximum price unpeg ratio"
      },
      "setPoolPriceStatisticsLookbackInRound(address,uint8)": {
        "notice": "Sets a pool's price statistics lookback in round"
      },
      "setPoolPriceStatisticsLookbackInSec(address,uint64)": {
        "notice": "Sets a pool's price statistics lookback in seconds"
      },
      "setPoolPriceStatisticsLookbackStepInRound(address,uint8)": {
        "notice": "Sets a pool's statistics lookback step in round"
      },
      "setPoolSwapFee(address,uint256)": {
        "notice": "Sets a pool's swap fee"
      },
      "transferOwnership(address)": {
        "notice": "Allows an owner to begin transferring ownership to a new address, pending."
      },
      "whenNotPaused()": {
        "notice": "Reverts pools if the factory is paused"
      }
    },
    "version": 1
  }
}